{"version":3,"sources":["api/index.tsx","api/checkpoint.tsx","slices/checkpoint.tsx","types/index.tsx","api/dataset.tsx","slices/notebook.tsx","slices/status.tsx","api/browser.tsx","slices/editor.tsx","slices/browser.tsx","store.tsx","components/NavBar.tsx","components/AlertBox/Error.tsx","components/AlertBox/Success.tsx","components/AlertBox/index.tsx","views/HomeView.tsx","components/Modal.tsx","components/DatasetSelect.tsx","utils/index.tsx","components/Editor/TopBar.tsx","components/Editor/Cell.tsx","components/Editor/index.tsx","components/DataBrowser/RawView.tsx","components/DataBrowser/TableView.tsx","components/DataBrowser/ConsoleView.tsx","components/DataBrowser/index.tsx","components/LoadCheckpoint/CheckpointDetail.tsx","components/LoadCheckpoint/index.tsx","components/SaveCheckpoint.tsx","views/NotebookView.tsx","components/Select.tsx","components/UploadDataset/UploadFile.tsx","components/UploadDataset/index.tsx","views/DatasetView.tsx","App.tsx","index.tsx"],"names":["client","axios","create","validateStatus","status","fetchCheckpoints","databaseModel","a","get","response","data","saveCheckpoint","payload","post","loadCheckpoint","id","BrowserMode","ModalMode","DatabaseModel","performFetchCheckpoints","createAsyncThunk","_","getState","rejectWithValue","notebook","performSaveCheckpoint","name","editor","browser","selectedDataset","editorState","browserState","performLoadCheckpoint","checkpointSlice","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","fetchDatasets","uploadDataset","formData","datasets","modalMode","None","performFetchDatasets","performUploadDataset","notebookSlice","selectDatabaseModel","selectDataset","toggleModal","actions","isPendingAction","type","endsWith","isFulfilledAction","isRejectedAction","statusSlice","loading","success","error","setError","timestamp","Date","now","message","setSuccess","addMatcher","errorMessage","updateBrowser","request","performRunCell","index","cells","length","targetCell","editorContent","editorSlice","cellCounter","execCounter","lastExecutedCellId","updateBrowserCellId","addCell","newCell","execStatus","errorStatus","numOfLines","splice","push","changeCell","value","split","deleteCell","pop","swapCell","from","focusedCellIndex","to","step","loadCells","pending","targetCellIndex","meta","arg","hasCellError","shouldUpdateBrowser","rejected","browserSlice","raw","table","console","results","rootReducer","combineReducers","reducer","checkpoint","store","configureStore","dispatch","NavBar","className","Error","slot","xmlns","width","height","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","onClick","Success","d","AlertBox","useSelector","tutorialText","src","alt","HomeView","Modal","title","children","useDispatch","DatasetSelect","useState","selection","setSelection","useEffect","onSubmit","e","preventDefault","onChange","target","disabled","map","renderOption","range","min","max","undefined","Array","keys","num","TopBar","numOfCells","setFocusedCellIndex","handleRunAllCells","result","unwrapResult","data-tip","data-for","SaveCheckpoint","LoadCheckpoint","place","effect","Cell","cellContent","hasError","leftBorder","style","mode","theme","showGutter","fontSize","minLines","maxLines","onFocus","wrapEnabled","Editor","cell","i","RawView","rawData","useMemo","readOnly","showPrintMargin","TableView","tableData","remarkPlugins","gfm","ConsoleView","consoleOutput","DataBrowser","modes","browserMode","setBrowserMode","handleClick","currentTarget","tabButtons","Raw","Table","Console","CheckpointDetail","selectedId","setSelectedId","find","c","role","ids","checkpointDetail","checkpointName","setCheckpointName","toLocaleString","autoFocus","placeholder","NotebookView","Mongodb","Psql","Select","options","renderOptions","option","uploadCloudIcon","documentIcon","UploadFile","accept","htmlFor","files","acceptedFileMap","UploadDataset","setDatabaseModel","file","setFile","FormData","append","then","Object","values","DatasetView","App","exact","path","ReactDOM","render","StrictMode","forceRefresh","document","getElementById"],"mappings":"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","file":"static/js/main.8ffef2b3.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst client = axios.create({\r\n  validateStatus: (status) => status < 300,\r\n});\r\n\r\nexport default client;\r\n","import client from './index';\r\n\r\nimport { Checkpoint, CheckpointMeta } from '../types';\r\n\r\nexport async function fetchCheckpoints(databaseModel: string): Promise<CheckpointMeta[]> {\r\n  const response = await client.get(`/api/checkpoint?databaseModel=${databaseModel}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function saveCheckpoint(payload: Checkpoint): Promise<void> {\r\n  const response = await client.post(\r\n    `/api/checkpoint?databaseModel=${payload.databaseModel}`,\r\n    payload,\r\n  );\r\n  return response.data;\r\n}\r\n\r\nexport async function loadCheckpoint(id: string): Promise<Checkpoint> {\r\n  const response = await client.get(`/api/checkpoint/${id}`);\r\n  return response.data;\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { fetchCheckpoints, loadCheckpoint, saveCheckpoint } from '../api/checkpoint';\r\nimport { CheckpointMeta } from '../types';\r\nimport { BrowserState } from './browser';\r\nimport { EditorState } from './editor';\r\nimport { NotebookState } from './notebook';\r\n\r\nexport type CheckpointState = CheckpointMeta[];\r\n\r\nconst initialState: CheckpointState = [];\r\n\r\nexport const performFetchCheckpoints = createAsyncThunk(\r\n  'checkpoint/fetch',\r\n  async (_, { getState, rejectWithValue }) => {\r\n    const { notebook } = getState() as {notebook: NotebookState};\r\n\r\n    if (!notebook.databaseModel) {\r\n      return rejectWithValue('Rejected');\r\n    }\r\n\r\n    try {\r\n      return await fetchCheckpoints(notebook.databaseModel);\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const performSaveCheckpoint = createAsyncThunk(\r\n  'checkpoint/save',\r\n  async (name: string, { getState, rejectWithValue }) => {\r\n    const { editor, notebook, browser } = getState() as {editor: EditorState, notebook: NotebookState, browser: BrowserState};\r\n\r\n    if (!notebook.selectedDataset || !notebook.databaseModel || browser === null) {\r\n      return rejectWithValue('Rejected');\r\n    }\r\n\r\n    try {\r\n      return await saveCheckpoint({\r\n        name,\r\n        editorState: editor,\r\n        browserState: browser,\r\n        databaseModel: notebook.databaseModel,\r\n        selectedDataset: notebook.selectedDataset,\r\n      });\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const performLoadCheckpoint = createAsyncThunk(\r\n  'checkpoint/load',\r\n  async (id: string, { rejectWithValue }) => {\r\n    try {\r\n      return await loadCheckpoint(id);\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const checkpointSlice = createSlice({\r\n  name: 'checkpoint',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performFetchCheckpoints.fulfilled, (state, action) => action.payload);\r\n  },\r\n});\r\n","import { EditorState } from '../slices/editor';\r\nimport { BrowserState } from '../slices/browser';\r\n\r\nexport enum BrowserMode {\r\n  Raw = 'Raw',\r\n  Table = 'Table',\r\n  Console = 'Console',\r\n}\r\n\r\nexport enum ModalMode {\r\n  SaveCheckpoint = 'Save Checkpoint',\r\n  LoadCheckpoint = 'Load Checkpoint',\r\n  None = 'None',\r\n}\r\n\r\nexport enum DatabaseModel {\r\n  Mongodb = 'mongodb',\r\n  Psql = 'psql',\r\n}\r\n\r\nexport interface CellExecutionResult {\r\n  raw?: string;\r\n  table?: string;\r\n  console?: string;\r\n  hasCellError: boolean;\r\n  shouldUpdateBrowser: boolean;\r\n}\r\n\r\nexport interface Cell {\r\n  id: number;\r\n  execStatus: number | string;\r\n  errorStatus: boolean;\r\n  editorContent: string;\r\n  numOfLines: number;\r\n}\r\n\r\nexport interface Checkpoint {\r\n  name: string;\r\n  editorState: EditorState;\r\n  browserState: BrowserState;\r\n  databaseModel: string;\r\n  selectedDataset: string;\r\n}\r\n\r\nexport interface CheckpointMeta {\r\n  id: string;\r\n  name: string;\r\n}\r\n","import { DatabaseModel } from '../types';\r\nimport client from './index';\r\n\r\nexport async function fetchDatasets(databaseModel: string): Promise<string[]> {\r\n  const response = await client.get(`/api/${databaseModel}/dataset`);\r\n  return response.data;\r\n}\r\n\r\nexport type UploadDatasetPayload = {\r\n  databaseModel: DatabaseModel;\r\n  formData: FormData;\r\n}\r\n\r\nexport async function uploadDataset(payload: UploadDatasetPayload): Promise<string> {\r\n  const { databaseModel, formData } = payload;\r\n\r\n  const response = await client.post(`/api/${databaseModel}/dataset`, formData);\r\n  return response.data;\r\n}\r\n","import {\r\n  createAsyncThunk,\r\n  createSlice,\r\n  PayloadAction,\r\n} from '@reduxjs/toolkit';\r\n\r\nimport { performLoadCheckpoint } from './checkpoint';\r\nimport { DatabaseModel, ModalMode } from '../types';\r\nimport { UploadDatasetPayload, uploadDataset, fetchDatasets } from '../api/dataset';\r\n\r\nexport type NotebookState = {\r\n  databaseModel: DatabaseModel | null;\r\n  datasets: string[];\r\n  selectedDataset: string | null;\r\n  modalMode: ModalMode;\r\n}\r\n\r\nconst initialState: NotebookState = {\r\n  databaseModel: null,\r\n  datasets: [],\r\n  selectedDataset: null,\r\n  modalMode: ModalMode.None,\r\n};\r\n\r\nexport const performFetchDatasets = createAsyncThunk(\r\n  'notebook/fetchDatasets',\r\n  async (_, { getState, rejectWithValue }) => {\r\n    const { notebook: { databaseModel } } = getState() as {notebook: {databaseModel: DatabaseModel | null}};\r\n\r\n    if (!databaseModel) return rejectWithValue('Unable to fetch datasets. No database model selected');\r\n\r\n    try {\r\n      return await fetchDatasets(databaseModel);\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const performUploadDataset = createAsyncThunk(\r\n  'notebook/uploadDataset',\r\n  async (payload: UploadDatasetPayload, { rejectWithValue }) => {\r\n    try {\r\n      return await uploadDataset(payload);\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const notebookSlice = createSlice({\r\n  name: 'notebook',\r\n  initialState,\r\n  reducers: {\r\n    selectDatabaseModel: (state: NotebookState, { payload }: PayloadAction<DatabaseModel | null>) => {\r\n      state.databaseModel = payload;\r\n    },\r\n\r\n    selectDataset: (state: NotebookState, { payload }: PayloadAction<string>) => {\r\n      state.selectedDataset = payload;\r\n    },\r\n\r\n    toggleModal: (state: NotebookState, { payload }: PayloadAction<ModalMode>) => {\r\n      state.modalMode = payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performUploadDataset.fulfilled, (state, action) => {\r\n      state.selectedDataset = action.payload;\r\n    });\r\n\r\n    builder.addCase(performLoadCheckpoint.fulfilled, (state, action) => {\r\n      state.selectedDataset = action.payload.selectedDataset;\r\n    });\r\n\r\n    builder.addCase(performFetchDatasets.fulfilled, (state, action) => {\r\n      state.datasets = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport const {\r\n  selectDatabaseModel,\r\n  selectDataset,\r\n  toggleModal,\r\n} = notebookSlice.actions;\r\n","import {\r\n  PayloadAction,\r\n  AnyAction,\r\n  AsyncThunk,\r\n  createSlice,\r\n} from '@reduxjs/toolkit';\r\n\r\nimport { performUploadDataset } from './notebook';\r\n\r\nexport type StatusState = {\r\n  loading: boolean;\r\n  success: {timestamp: number, message: string} | null;\r\n  error: {timestamp: number, message: string} | null;\r\n}\r\n\r\nconst initialState: StatusState = {\r\n  loading: false,\r\n  success: null,\r\n  error: null,\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntype GenericAsyncThunk = AsyncThunk<unknown, unknown, any>;\r\n\r\ntype PendingAction = ReturnType<GenericAsyncThunk['pending']>;\r\ntype FulfilledAction = ReturnType<GenericAsyncThunk['fulfilled']>;\r\ntype RejectedAction = ReturnType<GenericAsyncThunk['rejected']>;\r\n\r\nfunction isPendingAction(action: AnyAction): action is PendingAction {\r\n  return action.type.endsWith('/pending');\r\n}\r\n\r\nfunction isFulfilledAction(action: AnyAction): action is FulfilledAction {\r\n  return action.type.endsWith('/fulfilled');\r\n}\r\n\r\nfunction isRejectedAction(action: AnyAction): action is RejectedAction {\r\n  return action.type.endsWith('/rejected');\r\n}\r\n\r\nexport const statusSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    setError: (state: StatusState, { payload }: PayloadAction<string | null>) => {\r\n      if (payload) {\r\n        state.error = { timestamp: Date.now(), message: payload };\r\n        state.success = null;\r\n      } else {\r\n        state.error = null;\r\n      }\r\n    },\r\n\r\n    setSuccess: (state: StatusState, { payload }: PayloadAction<string | null>) => {\r\n      if (payload) {\r\n        state.success = { timestamp: Date.now(), message: payload };\r\n        state.error = null;\r\n      } else {\r\n        state.success = null;\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performUploadDataset.fulfilled, (state) => {\r\n      state.success = { timestamp: Date.now(), message: 'Successfully uploaded dataset' };\r\n    });\r\n\r\n    // Match any action that has type ending with '/pending'\r\n    builder.addMatcher(isPendingAction, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    // Match any action that has type ending with '/fulfilled'\r\n    builder.addMatcher(isFulfilledAction, (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    // Match any action that has type ending with '/rejected'\r\n    builder.addMatcher(isRejectedAction, (state, action: AnyAction) => {\r\n      state.loading = false;\r\n      state.success = null;\r\n\r\n      const errorMessage: string | undefined = action.payload as string | undefined || action.error.message;\r\n\r\n      if (errorMessage) {\r\n        state.error = { timestamp: Date.now(), message: errorMessage };\r\n      } else {\r\n        state.error = null;\r\n      }\r\n    });\r\n  },\r\n});\r\n\r\nexport const {\r\n  setError,\r\n  setSuccess,\r\n} = statusSlice.actions;\r\n","import client from './index';\r\nimport { CellExecutionResult } from '../types';\r\n\r\ntype UpdateBrowserPayload = {\r\n  databaseModel: string | null;\r\n  selectedDataset: string;\r\n  editorContent: string;\r\n}\r\n\r\nexport async function updateBrowser(payload: UpdateBrowserPayload): Promise<CellExecutionResult> {\r\n  const { databaseModel, ...request } = payload;\r\n\r\n  const response = await client.post(`/api/${databaseModel}/run`, request);\r\n  return response.data;\r\n}\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { updateBrowser } from '../api/browser';\r\nimport { Cell } from '../types';\r\nimport { performLoadCheckpoint } from './checkpoint';\r\nimport { NotebookState } from './notebook';\r\n\r\nexport type EditorState = {\r\n  cells: Cell[];\r\n  cellCounter: number;\r\n  execCounter: number;\r\n  lastExecutedCellId: number | null;\r\n  updateBrowserCellId: number | null;\r\n}\r\n\r\nconst initialState: EditorState = {\r\n  cells: [],\r\n  cellCounter: 0,\r\n  execCounter: 0,\r\n  lastExecutedCellId: null,\r\n  updateBrowserCellId: null,\r\n};\r\n\r\nexport const performRunCell = createAsyncThunk(\r\n  'editor/runCell',\r\n  async (index: number, { getState, rejectWithValue }) => {\r\n    const { notebook, editor } = getState() as {notebook: NotebookState, editor: EditorState};\r\n\r\n    if (index > editor.cells.length) return rejectWithValue('Invalid cell');\r\n\r\n    if (!notebook.selectedDataset) return rejectWithValue('No dataset selected');\r\n\r\n    const targetCell = editor.cells[index];\r\n\r\n    try {\r\n      return await updateBrowser({\r\n        databaseModel: notebook.databaseModel,\r\n        selectedDataset: notebook.selectedDataset,\r\n        editorContent: targetCell.editorContent,\r\n      });\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const editorSlice = createSlice({\r\n  name: 'editor',\r\n  initialState,\r\n  reducers: {\r\n    addCell: (state: EditorState, { payload }: PayloadAction<number | null>) => {\r\n      state.cellCounter += 1;\r\n\r\n      const newCell = {\r\n        id: state.cellCounter,\r\n        execStatus: ' ',\r\n        errorStatus: false,\r\n        editorContent: '',\r\n        numOfLines: 0,\r\n      };\r\n\r\n      if (payload !== null) {\r\n        // Add a new cell after the focused cell.\r\n        state.cells.splice(payload + 1, 0, newCell);\r\n      } else {\r\n        // If no cell or none focused yet, add the new cell at the end.\r\n        state.cells.push(newCell);\r\n      }\r\n    },\r\n\r\n    changeCell: (state: EditorState, { payload: { index, value } }: PayloadAction<{index: number, value: string}>) => {\r\n      state.cells[index].numOfLines = value.split('\\n').length;\r\n      state.cells[index].editorContent = value;\r\n    },\r\n\r\n    deleteCell: (state: EditorState, { payload }: PayloadAction<number | null>) => {\r\n      if (payload !== null) {\r\n        // Remove focused cell.\r\n        state.cells.splice(payload, 1);\r\n      } else {\r\n        // Remove the cell at the end.\r\n        state.cells.pop();\r\n      }\r\n    },\r\n\r\n    swapCell: (state: EditorState, { payload: { focusedCellIndex, step } }: PayloadAction<{focusedCellIndex: number, step: number}>) => {\r\n      const from = focusedCellIndex;\r\n      const to = from + step;\r\n\r\n      // Swap the cells with `from` index and `to` index.\r\n      state.cells.splice(to, 0, state.cells.splice(from, 1)[0]);\r\n    },\r\n\r\n    loadCells: (state: EditorState, { payload }: PayloadAction<Cell[]>) => {\r\n      state.cells = payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performRunCell.pending, (state, action) => {\r\n      const targetCellIndex = action.meta.arg;\r\n      const targetCell = state.cells[targetCellIndex];\r\n\r\n      targetCell.execStatus = '*';\r\n      targetCell.errorStatus = false;\r\n    });\r\n\r\n    builder.addCase(performRunCell.fulfilled, (state, action) => {\r\n      const targetCellIndex = action.meta.arg;\r\n      const targetCell = state.cells[targetCellIndex];\r\n\r\n      state.execCounter += 1;\r\n\r\n      targetCell.execStatus = state.execCounter;\r\n      targetCell.errorStatus = action.payload.hasCellError;\r\n      state.lastExecutedCellId = targetCell.id;\r\n      if (action.payload.shouldUpdateBrowser) state.updateBrowserCellId = targetCell.id;\r\n    });\r\n\r\n    builder.addCase(performRunCell.rejected, (state, action) => {\r\n      const targetCellIndex = action.meta.arg;\r\n      const targetCell = state.cells[targetCellIndex];\r\n\r\n      targetCell.execStatus = ' ';\r\n      targetCell.errorStatus = true;\r\n    });\r\n\r\n    builder.addCase(performLoadCheckpoint.fulfilled, (state, action) => action.payload.editorState);\r\n  },\r\n});\r\n\r\nexport const {\r\n  addCell,\r\n  changeCell,\r\n  deleteCell,\r\n  swapCell,\r\n  loadCells,\r\n} = editorSlice.actions;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { performRunCell } from './editor';\r\nimport { performLoadCheckpoint } from './checkpoint';\r\n\r\nexport type BrowserState = {\r\n  raw: string;\r\n  table: string;\r\n  console: string;\r\n}\r\n\r\nconst initialState: BrowserState = {\r\n  raw: '',\r\n  table: '',\r\n  console: '',\r\n};\r\n\r\nexport const browserSlice = createSlice({\r\n  name: 'browser',\r\n  initialState: initialState as BrowserState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performRunCell.fulfilled, (state, action) => {\r\n      const { hasCellError, shouldUpdateBrowser, ...results } = action.payload;\r\n      return { ...state, ...results };\r\n    });\r\n\r\n    builder.addCase(performLoadCheckpoint.fulfilled, (state, action) => action.payload.browserState);\r\n  },\r\n});\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { statusSlice } from './slices/status';\r\nimport { notebookSlice } from './slices/notebook';\r\nimport { editorSlice } from './slices/editor';\r\nimport { browserSlice } from './slices/browser';\r\nimport { checkpointSlice } from './slices/checkpoint';\r\n\r\nconst rootReducer = combineReducers({\r\n  status: statusSlice.reducer,\r\n  notebook: notebookSlice.reducer,\r\n  browser: browserSlice.reducer,\r\n  editor: editorSlice.reducer,\r\n  checkpoint: checkpointSlice.reducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport const { dispatch } = store;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NavBar(): React.ReactElement {\r\n  return (\r\n    <nav className=\"fixed z-10 h-20 w-screen flex flex-row items-start py-1 bg-blue-600 border-t-8 border-blue-200\">\r\n      <div id=\"Logo\" className=\"flex flex-row items-center gap-6 text-white\">\r\n        {/* Home page */}\r\n        <Link to=\"/\">\r\n          <h1 className=\"py-2 px-8 font-bold text-4xl hover:text-gray-300 no-underline\">\r\n            Data Jupyter\r\n          </h1>\r\n        </Link>\r\n\r\n        {/* Notebook (dropdown) */}\r\n        <ul id=\"Notebook\" className=\"dropdown flex flex-col\">\r\n          <li className=\"px-4 cursor-default\">\r\n            <h1 className=\"text-blue-200 text-2xl font-bold\">Notebook</h1>\r\n          </li>\r\n\r\n          <div className=\"pt-16 dropdown-content absolute hidden text-blue-200\">\r\n            <Link to=\"/postgresql\">\r\n              <li className=\"px-4 border-t-2 border-blue-200 bg-blue-600 hover:bg-blue-800 hover:text-white\">\r\n                <h2 className=\"font-bold text-xl\">PostgreSQL</h2>\r\n              </li>\r\n            </Link>\r\n\r\n            <Link to=\"/mongodb\">\r\n              <li className=\"px-4 border-t-2 border-blue-200 bg-blue-600 hover:bg-blue-800 hover:text-white\">\r\n                <h2 className=\"font-bold text-xl\">MongoDB</h2>\r\n              </li>\r\n            </Link>\r\n          </div>\r\n        </ul>\r\n\r\n        {/* Dataset */}\r\n        <Link to=\"/dataset\">\r\n          <h1 className=\"text-blue-200 hover:text-white text-2xl font-bold\">Dataset</h1>\r\n        </Link>\r\n\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { dispatch } from '../../store';\r\nimport { setError } from '../../slices/status';\r\n\r\ninterface IProps {\r\n    message: string;\r\n}\r\n\r\nexport default function Error({ message }: IProps): React.ReactElement {\r\n  return (\r\n    <div className=\"fixed top-20 left-1/2 transform -translate-x-1/2 z-10 flex justify-center items-center m-1 font-medium py-1 px-2 rounded-md text-red-700 bg-red-100 border border-red-400 \">\r\n      <div slot=\"avatar\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-alert-octagon w-5 h-5 mx-2\">\r\n          <polygon points=\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\" />\r\n          <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\" />\r\n          <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\" />\r\n        </svg>\r\n      </div>\r\n      <div className=\"text-xl font-normal  max-w-full flex-initial\">\r\n\r\n        {message}\r\n\r\n      </div>\r\n      <div className=\"flex flex-auto flex-row-reverse\">\r\n        <svg onClick={() => dispatch(setError(null))} xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-x cursor-pointer hover:text-red-400 rounded-full w-5 h-5 ml-2\">\r\n          <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\r\n          <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { dispatch } from '../../store';\r\nimport { setSuccess } from '../../slices/status';\r\n\r\ninterface IProps {\r\n    message: string;\r\n}\r\n\r\nexport default function Success({ message }: IProps): React.ReactElement {\r\n  return (\r\n    <div className=\"fixed top-20 left-1/2 transform -translate-x-1/2 z-10 flex justify-center items-center m-1 font-medium py-1 px-2 rounded-md text-green-700 bg-green-100 border border-green-300 \">\r\n      <div slot=\"avatar\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-check-circle w-5 h-5 mx-2\">\r\n          <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\" />\r\n          <polyline points=\"22 4 12 14.01 9 11.01\" />\r\n        </svg>\r\n      </div>\r\n      <div className=\"text-xl font-normal  max-w-full flex-initial\">\r\n\r\n        {message}\r\n\r\n      </div>\r\n      <div className=\"flex flex-auto flex-row-reverse\">\r\n        <svg onClick={() => dispatch(setSuccess(null))} xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-x cursor-pointer hover:text-green-400 rounded-full w-5 h-5 ml-2\">\r\n          <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\r\n          <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppState } from '../../store';\r\nimport Error from './Error';\r\nimport Success from './Success';\r\n\r\nexport default function AlertBox(): React.ReactElement {\r\n  const error = useSelector<AppState, {timestamp: number, message: string} | null>(\r\n    (state) => state.status.error,\r\n  );\r\n\r\n  const success = useSelector<AppState, {timestamp: number, message: string} | null>(\r\n    (state) => state.status.success,\r\n  );\r\n\r\n  return (\r\n    <div className={`transition duration-200 ease-in-out ${error || success ? 'opacity-100' : 'opacity-0'}`}>\r\n      {!!error && <Error message={error.message} />}\r\n      {!!success && <Success message={success.message} />}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst tutorialText = (\r\n  <div>\r\n    <h1 className=\"my-2 text-5xl text-center font-bold\">Instructions</h1>\r\n    <br />\r\n    <p>Data Jupyter is an interactive web application for simplifying the task of data processing on MongoDB and PostgreSQL databases. The main interface of Data Jupyter is modelled after the popular Jupyter Notebook, making it familiar to many data analysts. Data Jupyter also offers support for data traceability through its integrated checkpoint system and by enforcing a modular style of data processing.</p>\r\n    <br />\r\n    <h2 className=\"my-2 text-3xl font-semibold\">Loading a dataset</h2>\r\n    <ol className=\"list-decimal\">\r\n      <li>\r\n        Choose a demo dataset (e.g. nobel_prizes_incorrect) and press Select.\r\n        <img src=\"https://user-images.githubusercontent.com/72721378/122839332-f3ba1a80-d34b-11eb-8157-eadb74b66a2b.png\" alt=\"\" />\r\n      </li>\r\n      <li>\r\n        Add a new cell in the editor by clicking the + icon.\r\n        <img src=\"https://user-images.githubusercontent.com/72721378/122839450-295f0380-d34c-11eb-889f-c764b61594a4.png\" alt=\"\" />\r\n      </li>\r\n      <li>\r\n        In the new cell, type `show = col.find()` to make the Data Browser show all documents in the collection.\r\n        <img src=\"https://user-images.githubusercontent.com/72721378/122839489-3976e300-d34c-11eb-9a86-a827cbf29119.png\" alt=\"\" />\r\n      </li>\r\n      <li>\r\n        Click the single arrow icon to run the cell.\r\n        <img src=\"https://user-images.githubusercontent.com/72721378/122839560-5e6b5600-d34c-11eb-82d1-1e807002b15c.png\" alt=\"\" />\r\n      </li>\r\n      <li>\r\n        The data will be displayed on the Raw tab.\r\n        <img src=\"https://user-images.githubusercontent.com/72721378/122839638-865ab980-d34c-11eb-8de6-d7bb0b7bc4ee.png\" alt=\"\" />\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <h2 className=\"my-2 text-3xl font-semibold\">Loading a checkpoint</h2>\r\n    <p>Data traceability is a very important aspect in data analytics. Data Jupyter supported this by integrating a checkpoint system.</p>\r\n    <ol className=\"list-decimal\">\r\n      <li>\r\n        Click on the icon to the right.\r\n        <img src=\"https://user-images.githubusercontent.com/72721378/122839878-07b24c00-d34d-11eb-83e3-c74ebec64cc3.png\" alt=\"\" />\r\n      </li>\r\n      <li>\r\n        Select the checkpoint “6/15/2021, 1:09:23 PM” and click Load.\r\n        <img src=\"https://user-images.githubusercontent.com/72721378/122839882-0aad3c80-d34d-11eb-8de1-05098c8e4b84.png\" alt=\"\" />\r\n      </li>\r\n      <li>\r\n        The notebook state will be restored to that checkpoint.\r\n        <img src=\"https://user-images.githubusercontent.com/72721378/122839900-139e0e00-d34d-11eb-9256-2b475d6f0404.png\" alt=\"\" />\r\n      </li>\r\n    </ol>\r\n  </div>\r\n);\r\n\r\nexport default function HomeView(): React.ReactElement {\r\n  return (\r\n    <div className=\"grid grid-cols-4\">\r\n      <div />\r\n\r\n      <div className=\"col-span-2 py-8 px-12 bg-white shadow-lg rounded-lg my-20\">\r\n        {tutorialText}\r\n      </div>\r\n\r\n      <div />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { ModalMode } from '../types';\r\nimport { toggleModal } from '../slices/notebook';\r\n\r\ninterface IProps {\r\n  title: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport default function Modal({ title, children }: IProps): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"bg-gray-400 h-screen w-screen flex justify-center items-center\">\r\n      <div className=\"mb-24 bg-white rounded shadow-lg w-2/12\">\r\n        <div className=\"border-b px-4 py-2 flex justify-between items-center\">\r\n          <h3 className=\"font-semibold text-lg uppercase\">{title}</h3>\r\n          <svg onClick={() => dispatch(toggleModal(ModalMode.None))} xmlns=\"http://www.w3.org/2000/svg\" className=\"button-icon hover:text-red-700\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n          </svg>\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppState, dispatch } from '../store';\r\nimport { selectDataset } from '../slices/notebook';\r\nimport { setError } from '../slices/status';\r\n\r\nexport default function DatasetSelect(): React.ReactElement {\r\n  const datasets = useSelector<AppState, string[]>(\r\n    (state) => state.notebook.datasets,\r\n  );\r\n\r\n  const selectedDataset = useSelector<AppState, string | null>(\r\n    (state) => state.notebook.selectedDataset,\r\n  );\r\n\r\n  const [selection, setSelection] = useState<string>('NONE');\r\n\r\n  // If `selectedDataset` changed (e.g. through a checkpoint load), then update the value of\r\n  // the `select` form to match it\r\n  useEffect(() => {\r\n    if (selectedDataset === null) return;\r\n    setSelection(selectedDataset);\r\n  }, [selectedDataset]);\r\n\r\n  const handleSelectionChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelection(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (selection === 'NONE') {\r\n      dispatch(setError('No dataset selected'));\r\n      return;\r\n    }\r\n\r\n    dispatch(selectDataset(selection));\r\n    dispatch(setError(null));\r\n  };\r\n\r\n  const renderOption = (name: string) => (\r\n    <option\r\n      key={name}\r\n      value={name}\r\n      className={`ml-2 inline-block ${selectedDataset === name && 'font-bold'}`}\r\n    >\r\n      {name}\r\n    </option>\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"mx-auto flex flex-col gap-4 items-center\">\r\n      <select\r\n        value={selection}\r\n        onChange={handleSelectionChange}\r\n        className=\"border border-gray-300 rounded-full text-gray-600 h-10 pl-5 pr-10 bg-white hover:border-gray-400 focus:outline-none appearance-none\"\r\n      >\r\n\r\n        <option disabled value=\"NONE\"> -- select an option -- </option>\r\n\r\n        {datasets.map((name) => renderOption(name))}\r\n\r\n      </select>\r\n\r\n      <input type=\"submit\" value=\"Select\" className=\"cursor-pointer button-relief\" />\r\n    </form>\r\n  );\r\n}\r\n","/**\r\n * Create a range of numbers.\r\n *\r\n * @param min The first number in the range.\r\n * @param max The last number in the range.\r\n * @returns The range.\r\n */\r\nexport function range(min: number, max?: number): number[] {\r\n  // If only one number is provided, start at zero\r\n  if (max === undefined) {\r\n    max = min;\r\n    min = 0;\r\n  }\r\n\r\n  // Create a ranged array\r\n  return Array.from(new Array(max - min).keys()).map((num) => num + min);\r\n}\r\n","import React from 'react';\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport { ModalMode } from '../../types';\r\nimport { dispatch } from '../../store';\r\nimport {\r\n  addCell,\r\n  deleteCell,\r\n  swapCell,\r\n  performRunCell,\r\n} from '../../slices/editor';\r\nimport { toggleModal } from '../../slices/notebook';\r\nimport { setError } from '../../slices/status';\r\nimport { range } from '../../utils';\r\n\r\ninterface IProps {\r\n  numOfCells: number;\r\n  focusedCellIndex: number | null;\r\n  setFocusedCellIndex: React.Dispatch<React.SetStateAction<number | null>>;\r\n}\r\n\r\nexport default function TopBar({\r\n  numOfCells,\r\n  focusedCellIndex,\r\n  setFocusedCellIndex,\r\n}: IProps): React.ReactElement {\r\n  const handleAddCell = () => dispatch(addCell(focusedCellIndex));\r\n\r\n  const handleDeleteCell = () => {\r\n    dispatch(deleteCell(focusedCellIndex));\r\n    setFocusedCellIndex(null);\r\n  };\r\n\r\n  const handleMoveUpCell = () => {\r\n    if (focusedCellIndex !== null && focusedCellIndex > 0) {\r\n      dispatch(swapCell({ focusedCellIndex, step: -1 }));\r\n      setFocusedCellIndex(focusedCellIndex - 1);\r\n    }\r\n  };\r\n\r\n  const handleMoveDownCell = () => {\r\n    if (focusedCellIndex !== null && focusedCellIndex < (numOfCells - 1)) {\r\n      dispatch(swapCell({ focusedCellIndex, step: 1 }));\r\n      setFocusedCellIndex(focusedCellIndex + 1);\r\n    }\r\n  };\r\n\r\n  const handleRunCell = () => {\r\n    if (numOfCells === 0) {\r\n      dispatch(setError('No cell to run'));\r\n      return;\r\n    }\r\n\r\n    if (focusedCellIndex !== null) {\r\n      // Run the focused cell.\r\n      dispatch(performRunCell(focusedCellIndex));\r\n    } else {\r\n      // Run the last cell.\r\n      dispatch(performRunCell(numOfCells - 1));\r\n    }\r\n  };\r\n\r\n  const handleRunAllCells = async () => {\r\n    if (numOfCells === 0) {\r\n      dispatch(setError('No cell to run'));\r\n      return;\r\n    }\r\n\r\n    for (const index of range(numOfCells)) {\r\n      try {\r\n        const result = await dispatch(performRunCell(index));\r\n        const { hasCellError } = unwrapResult(result);\r\n\r\n        // Stop running subsequent cells if there is an error.\r\n        if (hasCellError) break;\r\n      } catch (e) {\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSaveCheckpoint = () => {\r\n    dispatch(toggleModal(ModalMode.SaveCheckpoint));\r\n  };\r\n\r\n  const handleLoadCheckpoint = () => {\r\n    dispatch(toggleModal(ModalMode.LoadCheckpoint));\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-4 max-w-4xl max-h-screen bg-gray-50 border border-gray-300 rounded-md text-left\">\r\n      <div className=\"flex flex-row justify-between\">\r\n        <div className=\"flex flex-row\">\r\n          <svg onClick={handleAddCell} data-tip=\"Add New Cell\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n          </svg>\r\n          <svg onClick={handleDeleteCell} data-tip=\"Delete Cell\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-red-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n          </svg>\r\n          <svg onClick={handleMoveUpCell} data-tip=\"Move Cell Up\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 11l5-5m0 0l5 5m-5-5v12\" />\r\n          </svg>\r\n          <svg onClick={handleMoveDownCell} data-tip=\"Move Cell Down\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 13l-5 5m0 0l-5-5m5 5V6\" />\r\n          </svg>\r\n          <svg onClick={handleRunCell} data-tip=\"Run Cell\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n          </svg>\r\n          <svg onClick={handleRunAllCells} data-tip=\"Run All Cells\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\r\n          </svg>\r\n        </div>\r\n        <div className=\"flex flex-row\">\r\n          <svg onClick={handleSaveCheckpoint} xmlns=\"http://www.w3.org/2000/svg\" data-tip=\"Save Checkpoint\" data-for=\"topButtons\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\r\n          </svg>\r\n          <svg onClick={handleLoadCheckpoint} xmlns=\"http://www.w3.org/2000/svg\" data-tip=\"Load Checkpoint\" data-for=\"topButtons\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <ReactTooltip id=\"topButtons\" place=\"top\" effect=\"solid\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-python';\r\nimport 'ace-builds/src-noconflict/theme-chrome';\r\n\r\nimport { AppState } from '../../store';\r\nimport { changeCell } from '../../slices/editor';\r\n\r\ninterface IProps {\r\n  index: number;\r\n  setFocusedCellIndex: (value: number) => void;\r\n}\r\n\r\nfunction Cell({ index, setFocusedCellIndex }: IProps): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n\r\n  const execStatus = useSelector<AppState, string | number>((state) => (\r\n    state.editor.cells[index].execStatus\r\n  ));\r\n\r\n  const cellContent = useSelector<AppState, string>((state) => (\r\n    state.editor.cells[index].editorContent\r\n  ));\r\n\r\n  const numOfLines = useSelector<AppState, number>((state) => (\r\n    state.editor.cells[index].numOfLines\r\n  ));\r\n\r\n  const hasError = useSelector<AppState, boolean>((state) => (\r\n    state.editor.cells[index].errorStatus\r\n  ));\r\n\r\n  const islastExecuted = useSelector<AppState, boolean>((state) => (\r\n    state.editor.lastExecutedCellId === state.editor.cells[index].id\r\n  ));\r\n\r\n  const hasUpdatedBrowser = useSelector<AppState, boolean>((state) => (\r\n    state.editor.updateBrowserCellId === state.editor.cells[index].id\r\n  ));\r\n\r\n  // Determine color of the cell's left border.\r\n  let leftBorder = '';\r\n  if (islastExecuted) leftBorder = 'border-l-4 border-green-500';\r\n  if (hasUpdatedBrowser) leftBorder = 'border-l-4 border-blue-500';\r\n  if (hasError) leftBorder = 'border-l-4 border-red-500';\r\n\r\n  return (\r\n    <div className={`flex flex-col p-2 ${leftBorder} rounded shadow-md relative hover:shadow-lg overflow-hidden`}>\r\n      <div className=\"flex flex-row justify-between items-start\">\r\n        <span className=\"text-lg mr-4 min-w-max\">{`[${execStatus}]: `}</span>\r\n        <div style={{ width: '93%' }} className={`mt-2 ring-4 ring-gray-400 ${numOfLines <= 5 ? 'focus-within:ring-blue-500' : 'focus-within:ring-yellow-500'} relative`}>\r\n          <AceEditor\r\n            width=\"100%\"\r\n            mode=\"python\"\r\n            theme=\"chrome\"\r\n            showGutter={false}\r\n            fontSize={16}\r\n            minLines={1}\r\n            maxLines={15}\r\n            value={cellContent}\r\n            onFocus={() => setFocusedCellIndex(index)}\r\n            onChange={(value: string) => dispatch(changeCell({ index, value }))}\r\n            wrapEnabled\r\n          />\r\n        </div>\r\n      </div>\r\n      {numOfLines > 5 && <span className=\"mt-2 text-yellow-500 text-right font-bold\">Recommended maximum number of lines is 5</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cell;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport type { Cell as CellEntity } from '../../types';\r\nimport { AppState } from '../../store';\r\nimport TopBar from './TopBar';\r\nimport Cell from './Cell';\r\n\r\nexport default function Editor(): React.ReactElement {\r\n  const cells = useSelector<AppState, CellEntity[]>((state) => state.editor.cells);\r\n\r\n  const [focusedCellIndex, setFocusedCellIndex] = useState<number | null>(null);\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <TopBar\r\n        numOfCells={cells.length}\r\n        focusedCellIndex={focusedCellIndex}\r\n        setFocusedCellIndex={setFocusedCellIndex}\r\n      />\r\n      <div className=\"px-4 max-w-4xl h-80vh bg-gray-50 border border-gray-300 block rounded-md text-left overflow-y-scroll\">\r\n        <div className=\"flex flex-col m-2 gap-4\">\r\n          {cells.map((cell, i) => <Cell key={cell.id} index={i} setFocusedCellIndex={setFocusedCellIndex} />)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-json';\r\nimport 'ace-builds/src-noconflict/theme-monokai';\r\n\r\nimport { AppState } from '../../store';\r\n\r\nexport default function RawView(): React.ReactElement {\r\n  const rawData = useSelector<AppState, string>((state) => (state.browser.raw));\r\n\r\n  const codeView = useMemo(() => (\r\n    <AceEditor\r\n      width=\"100%\"\r\n      mode=\"json\"\r\n      theme=\"monokai\"\r\n      readOnly\r\n      fontSize={16}\r\n      minLines={39}\r\n      maxLines={39}\r\n      showPrintMargin={false}\r\n      value={rawData}\r\n    />\r\n  ), [rawData]);\r\n\r\n  return codeView;\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\n\r\nimport { AppState } from '../../store';\r\n\r\nexport default function TableView(): React.ReactElement {\r\n  const tableData = useSelector<AppState, string>((state) => (state.browser.table));\r\n\r\n  const tableView = useMemo(() => (\r\n    <div className=\"px-4 w-full h-80vh bg-gray-50 border border-gray-300 block rounded-md whitespace-nowrap overflow-scroll\">\r\n      <ReactMarkdown remarkPlugins={[gfm]}>\r\n        {tableData}\r\n      </ReactMarkdown>\r\n    </div>\r\n  ), [tableData]);\r\n\r\n  return tableView;\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppState } from '../../store';\r\n\r\nexport default function ConsoleView(): React.ReactElement {\r\n  const consoleOutput = useSelector<AppState, string>((state) => (state.browser.console));\r\n\r\n  return (\r\n    <div className=\"px-4 w-full h-80vh bg-gray-50 border border-gray-300 block rounded-md text-left overflow-scroll\">\r\n      <span className=\"font-mono\">{consoleOutput}</span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppState } from '../../store';\r\nimport { BrowserMode } from '../../types';\r\nimport RawView from './RawView';\r\nimport TableView from './TableView';\r\nimport ConsoleView from './ConsoleView';\r\n\r\ninterface IProps {\r\n  modes: BrowserMode[];\r\n}\r\n\r\nexport default function DataBrowser({ modes }: IProps): React.ReactElement {\r\n  const loading = useSelector<AppState, boolean>((state) => state.status.loading);\r\n\r\n  const [browserMode, setBrowserMode] = useState<BrowserMode>(modes[0]);\r\n\r\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    setBrowserMode(e.currentTarget.name as BrowserMode);\r\n  };\r\n\r\n  const tabButtons = modes.map((mode) => (\r\n    <button\r\n      key={mode}\r\n      type=\"button\"\r\n      name={mode}\r\n      onClick={handleClick}\r\n      className={`py-2 px-4 inline-block font-semibold ${(browserMode === mode) ? 'text-blue-600' : 'text-gray-400'}`}\r\n    >\r\n      {mode}\r\n    </button>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"px-4 max-w-4xl min-h-screen\">\r\n      <div className=\"flex flex-row justify-between w-full bg-gray-50 border border-gray-300 rounded-t-md\">\r\n        <div className=\"text-left\">\r\n          {tabButtons}\r\n        </div>\r\n        {loading && (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-700 m-2 outline-none animate-spin transform rotate-180\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n          </svg>\r\n        )}\r\n      </div>\r\n      {browserMode === BrowserMode.Raw && <RawView />}\r\n      {browserMode === BrowserMode.Table && <TableView />}\r\n      {browserMode === BrowserMode.Console && <ConsoleView />}\r\n    </div>\r\n  );\r\n}\r\n","import React, { SetStateAction } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppState } from '../../store';\r\nimport { CheckpointMeta } from '../../types';\r\n\r\ninterface IProps {\r\n    id: string;\r\n    selectedId: string | null;\r\n    setSelectedId: React.Dispatch<SetStateAction<string | null>>;\r\n}\r\n\r\nexport default function CheckpointDetail({ id, selectedId, setSelectedId }: IProps): React.ReactElement {\r\n  const checkpoint = useSelector<AppState, CheckpointMeta | undefined>((state) => (\r\n    state.checkpoint.find((c) => c.id === id)\r\n  ));\r\n\r\n  return (\r\n    <li onClick={() => setSelectedId(id)} className={`p-4 hover:bg-gray-100 cursor-pointer text-center ${selectedId === id && 'bg-gray-100'}`} role=\"presentation\">\r\n      {checkpoint?.name}\r\n    </li>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { ModalMode } from '../../types';\r\nimport { AppState, dispatch } from '../../store';\r\nimport { performFetchCheckpoints, performLoadCheckpoint } from '../../slices/checkpoint';\r\nimport { toggleModal } from '../../slices/notebook';\r\nimport { setError } from '../../slices/status';\r\nimport CheckpointDetail from './CheckpointDetail';\r\n\r\nexport default function LoadCheckpoint(): React.ReactElement {\r\n  const loading = useSelector<AppState, boolean>((state) => state.status.loading);\r\n\r\n  const ids = useSelector<AppState, string[]>((state) => (\r\n    state.checkpoint.map((checkpointDetail) => checkpointDetail.id)\r\n  ));\r\n\r\n  const [selectedId, setSelectedId] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(performFetchCheckpoints());\r\n  }, []);\r\n\r\n  const handleLoadCheckpoint = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedId) {\r\n      dispatch(setError('No checkpoint selected'));\r\n      return;\r\n    }\r\n    dispatch(performLoadCheckpoint(selectedId));\r\n    dispatch(toggleModal(ModalMode.None));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col justify-center\">\r\n        {ids.length > 0\r\n          ? (\r\n            <ul className=\"divide-y divide-gray-300\">\r\n              {ids.map((id) => <CheckpointDetail key={id} id={id} selectedId={selectedId} setSelectedId={setSelectedId} />)}\r\n            </ul>\r\n          )\r\n          : <span className=\"m-4\">{loading ? 'Loading...' : 'No checkpoint has been created'}</span>}\r\n      </div>\r\n      <div className=\"flex justify-end items-center w-100 border-t px-2\">\r\n        <button onClick={handleLoadCheckpoint} type=\"submit\" className=\"button bg-blue-600 hover:bg-blue-700\">Load</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { dispatch } from '../store';\r\nimport { ModalMode } from '../types';\r\nimport { performSaveCheckpoint } from '../slices/checkpoint';\r\nimport { toggleModal } from '../slices/notebook';\r\n\r\nexport default function SaveCheckpoint(): React.ReactElement {\r\n  const [checkpointName, setCheckpointName] = useState<string>('');\r\n\r\n  const timestamp = new Date().toLocaleString();\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // If no name provided, then defaults to the current timestamp\r\n    if (checkpointName === '') setCheckpointName(timestamp);\r\n\r\n    dispatch(performSaveCheckpoint(checkpointName));\r\n    dispatch(toggleModal(ModalMode.None));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"flex justify-center\">\r\n        <div className=\"my-4\">\r\n          <input\r\n            autoFocus\r\n            type=\"text\"\r\n            placeholder={timestamp}\r\n            value={checkpointName}\r\n            onChange={(e) => setCheckpointName(e.target.value)}\r\n            className=\"rounded-l-lg p-4 border-t mr-0 border-b border-l text-gray-800 border-gray-200 bg-white\"\r\n          />\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"button-reliefpx-8 rounded-r-lg bg-blue-700  text-white font-bold p-4 uppercase border-blue-800 border-t border-b border-r\"\r\n          >\r\n            Save\r\n\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { BrowserMode, DatabaseModel, ModalMode } from '../types';\r\nimport { AppState, dispatch } from '../store';\r\nimport { selectDatabaseModel, performFetchDatasets } from '../slices/notebook';\r\nimport Modal from '../components/Modal';\r\nimport DatasetSelect from '../components/DatasetSelect';\r\nimport Editor from '../components/Editor';\r\nimport DataBrowser from '../components/DataBrowser';\r\nimport LoadCheckpoint from '../components/LoadCheckpoint';\r\nimport SaveCheckpoint from '../components/SaveCheckpoint';\r\n\r\ninterface IProps {\r\n  databaseModel: DatabaseModel;\r\n}\r\n\r\nexport default function NotebookView({ databaseModel }: IProps): React.ReactElement {\r\n  const modalMode = useSelector<AppState, ModalMode>(\r\n    (state) => state.notebook.modalMode,\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(selectDatabaseModel(databaseModel));\r\n    dispatch(performFetchDatasets());\r\n  }, []);\r\n\r\n  switch (modalMode) {\r\n    case ModalMode.LoadCheckpoint:\r\n      return <Modal title=\"Load Checkpoint\"><LoadCheckpoint /></Modal>;\r\n\r\n    case ModalMode.SaveCheckpoint:\r\n      return <Modal title=\"Save Checkpoint\"><SaveCheckpoint /></Modal>;\r\n\r\n    default:\r\n      return (\r\n        <div className=\"h-full container mx-auto px-4 pt-16 text-center\">\r\n          <h1 className=\"font-bold text-5xl p-4 border-b-2 border-gray-300\">\r\n            {databaseModel === DatabaseModel.Mongodb ? 'MongoDB' : 'PostgreSQL'}\r\n          </h1>\r\n\r\n          <div className=\"py-4\">\r\n            <h1 className=\"font-bold text-3xl uppercase p-4\">Choose a dataset</h1>\r\n            <DatasetSelect />\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 gap-6 py-4\">\r\n            <div>\r\n              <h1 className=\"font-bold text-3xl uppercase px-4 py-6\">Editor</h1>\r\n              <Editor />\r\n            </div>\r\n\r\n            <div>\r\n              <h1 className=\"font-bold text-3xl uppercase px-4 py-6\">Data Browser</h1>\r\n              {databaseModel === DatabaseModel.Psql\r\n                ? <DataBrowser modes={[BrowserMode.Table, BrowserMode.Console]} />\r\n                : <DataBrowser modes={[BrowserMode.Raw, BrowserMode.Table, BrowserMode.Console]} />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\ninterface IProps {\r\n  options: string[];\r\n  value: string;\r\n  onChange: (data: string) => void;\r\n}\r\n\r\nexport default function Select({ options, value, onChange }: IProps): React.ReactElement {\r\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  const renderOptions = options.map((option) => (\r\n    <option\r\n      key={option}\r\n      value={option}\r\n      className=\"ml-2 inline-block\"\r\n    >\r\n      {option}\r\n    </option>\r\n  ));\r\n\r\n  return (\r\n    <select\r\n      value={value}\r\n      onChange={handleChange}\r\n      className=\"border border-gray-300 rounded-full text-gray-600 h-10 pl-5 pr-10 bg-white hover:border-gray-400 focus:outline-none appearance-none\"\r\n    >\r\n      {renderOptions}\r\n    </select>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst uploadCloudIcon = (\r\n  <svg className=\"w-8 h-8\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\r\n    <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\r\n  </svg>\r\n);\r\n\r\nconst documentIcon = (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n  </svg>\r\n);\r\n\r\ninterface IProps {\r\n  value: File | null;\r\n  onChange: (data: File) => void;\r\n  accept?: string;\r\n}\r\n\r\nexport default function UploadFile({ value, onChange, accept }: IProps): React.ReactElement {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!e.target.files || e.target.files.length === 0) return;\r\n    onChange(e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mx-auto w-64\">\r\n      <label htmlFor=\"file\" className=\"w-64 flex flex-col items-center px-4 py-6 bg-white text-blue-600 rounded-lg shadow-lg tracking-wide uppercase border border-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white\">\r\n        {value ? documentIcon : uploadCloudIcon}\r\n        <span className=\"mt-2 text-base leading-normal\">\r\n          {value?.name || 'Browse File'}\r\n        </span>\r\n        <input\r\n          id=\"file\"\r\n          type=\"file\"\r\n          name=\"dataset\"\r\n          onChange={handleChange}\r\n          accept={accept}\r\n          className=\"hidden\"\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { DatabaseModel } from '../../types';\r\nimport { dispatch } from '../../store';\r\nimport { performUploadDataset } from '../../slices/notebook';\r\nimport { setError } from '../../slices/status';\r\nimport Select from '../Select';\r\nimport UploadFile from './UploadFile';\r\n\r\nconst acceptedFileMap = {\r\n  [DatabaseModel.Mongodb]: '.txt',\r\n  [DatabaseModel.Psql]: '.csv',\r\n};\r\n\r\nexport default function UploadDataset(): React.ReactElement {\r\n  const [databaseModel, setDatabaseModel] = useState<DatabaseModel>(DatabaseModel.Mongodb);\r\n\r\n  const [file, setFile] = useState<File | null>(null);\r\n\r\n  const handleSelectionChange = (data: string) => {\r\n    setDatabaseModel(data as DatabaseModel);\r\n  };\r\n\r\n  const handleFileChange = (data: File) => {\r\n    setFile(data);\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!databaseModel) {\r\n      dispatch(setError('No database model selected'));\r\n      return;\r\n    }\r\n\r\n    if (!file) {\r\n      dispatch(setError('No file to upload'));\r\n      return;\r\n    }\r\n\r\n    // Attach file to a `FormData`, which sets an encoding type of \"multipart/form-data\"\r\n    // on the HTTP response.\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    dispatch(performUploadDataset({ databaseModel, formData }))\r\n      .then(() => setFile(null));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"flex flex-col items-center gap-4\">\r\n      <h3 className=\"font-bold text-xl p-4\">1. Select a database model</h3>\r\n\r\n      <Select\r\n        options={Object.values(DatabaseModel)}\r\n        value={databaseModel}\r\n        onChange={handleSelectionChange}\r\n      />\r\n\r\n      <h3 className=\"font-bold text-xl p-4\">\r\n        {`2. Choose a ${acceptedFileMap[databaseModel]} file`}\r\n      </h3>\r\n\r\n      <UploadFile\r\n        value={file}\r\n        onChange={handleFileChange}\r\n        accept={acceptedFileMap[databaseModel]}\r\n      />\r\n\r\n      <input type=\"submit\" value=\"Upload\" className=\"cursor-pointer button-relief\" />\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport UploadDataset from '../components/UploadDataset';\r\n\r\nexport default function DatasetView(): React.ReactElement {\r\n  return (\r\n    <div className=\"h-full container mx-auto px-4 pt-16 text-center\">\r\n      <h1 className=\"font-bold text-5xl p-4 border-b-2 border-gray-300\">\r\n        Dataset\r\n      </h1>\r\n\r\n      <div className=\"my-8 grid grid-cols-4\">\r\n        <div />\r\n\r\n        <div className=\"py-8 col-span-2 bg-white rounded-lg shadow\">\r\n          <h1 className=\"mb-4 font-bold text-3xl uppercase\">\r\n            Upload a dataset\r\n          </h1>\r\n\r\n          <UploadDataset />\r\n        </div>\r\n      </div>\r\n\r\n      <div />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\n\r\nimport { DatabaseModel } from './types';\r\nimport NavBar from './components/NavBar';\r\nimport AlertBox from './components/AlertBox';\r\nimport HomeView from './views/HomeView';\r\nimport NotebookView from './views/NotebookView';\r\nimport DatasetView from './views/DatasetView';\r\n\r\nexport default function App(): React.ReactElement {\r\n  return (\r\n    <div className=\"h-screen w-screen flex flex-col\">\r\n      <NavBar />\r\n\r\n      <AlertBox />\r\n\r\n      <main className=\"mt-16\">\r\n        <Switch>\r\n          <Route exact path={['/', '/index']}>\r\n            <HomeView />\r\n          </Route>\r\n\r\n          <Route exact path=\"/postgresql\">\r\n            <NotebookView key=\"postgresql\" databaseModel={DatabaseModel.Psql} />\r\n          </Route>\r\n\r\n          <Route exact path=\"/mongodb\">\r\n            <NotebookView key=\"mongodb\" databaseModel={DatabaseModel.Mongodb} />\r\n          </Route>\r\n\r\n          <Route exact path=\"/dataset\">\r\n            <DatasetView />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport { store } from './store';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* Set `forceRefresh` so that redux state will reset on page change */}\r\n      <BrowserRouter forceRefresh>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}