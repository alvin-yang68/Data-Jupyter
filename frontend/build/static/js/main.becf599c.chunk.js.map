{"version":3,"sources":["api/index.tsx","api/browser.tsx","api/checkpoint.tsx","slices/checkpoint.tsx","slices/editor.tsx","slices/notebook.tsx","slices/browser.tsx","store.tsx","components/DatasetSelection.tsx","components/DataBrowser.tsx","components/editor/TopBar.tsx","components/editor/Cell.tsx","utils/index.tsx","components/editor/index.tsx","components/checkpoint/CheckpointDetail.tsx","components/checkpoint/index.tsx","views/HomeView.tsx","App.tsx","index.tsx"],"names":["client","axios","create","validateStatus","status","updateBrowser","payload","a","post","response","data","fetchCheckpoints","get","saveCheckpoint","timestamp","Date","toLocaleString","loadCheckpoint","id","performFetchCheckpoints","createAsyncThunk","_","rejectWithValue","performSaveCheckpoint","getState","editor","notebook","browser","selectedDataset","editorState","browserState","performLoadCheckpoint","checkpointSlice","createSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","performRunCell","index","cells","length","targetCell","editorContent","editorSlice","cellCounter","execCounter","lastExecutedCellId","updateBrowserCellId","addCell","newCell","execStatus","errorStatus","numOfLines","splice","push","changeCell","value","split","deleteCell","pop","swapCell","from","focusedCellIndex","to","step","loadCells","pending","targetCellIndex","meta","arg","hasCellError","shouldUpdateBrowser","actions","notebookSlice","loading","error","showCheckpointModal","selectDataset","toggleCheckpointModal","rejected","message","browserSlice","raw","table","console","results","rootReducer","combineReducers","reducer","checkpoint","store","configureStore","dispatch","demoDatasets","DatasetSelection","Mode","useDispatch","useSelector","useForm","register","handleSubmit","errors","formState","className","onSubmit","dataset","map","htmlFor","required","type","radioField","DataBrowser","useState","Raw","browserMode","setBrowserMode","rawData","tableData","consoleOutput","handleClick","e","preventDefault","currentTarget","codeView","useMemo","width","mode","theme","readOnly","fontSize","minLines","maxLines","showPrintMargin","tableView","remarkPlugins","gfm","consoleView","onClick","Table","Console","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","TopBar","handleAddCell","handleDeleteCell","handleMoveUpCell","handleMoveDownCell","handleRunCell","handleRunAllCells","handleSaveCheckpoint","handleLoadCheckpoint","data-tip","data-for","place","effect","Cell","setFocusedCellIndex","cellContent","hasError","leftBorder","style","showGutter","onFocus","onChange","wrapEnabled","range","min","max","undefined","Array","keys","num","Editor","numOfCells","result","unwrapResult","i","CheckpointDetail","selectedId","setSelectedId","find","c","role","Checkpoint","ids","checkpointDetail","setError","useEffect","HomeView","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.becf599c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst client = axios.create({\r\n  validateStatus: (status) => status < 300,\r\n});\r\n\r\nexport default client;\r\n","import client from './index';\r\nimport { CellExecutionResult } from '../entities';\r\n\r\ntype UpdateBrowserPayload = {\r\n  selectedDataset: string;\r\n  editorContent: string;\r\n}\r\n\r\nexport async function updateBrowser(payload: UpdateBrowserPayload): Promise<CellExecutionResult> {\r\n  const response = await client.post('/api/run', payload);\r\n  return response.data;\r\n}\r\n","import client from './index';\r\n\r\nimport { Checkpoint, CheckpointMeta } from '../entities';\r\n\r\nexport async function fetchCheckpoints(): Promise<CheckpointMeta[]> {\r\n  const response = await client.get('/api/checkpoint');\r\n  return response.data;\r\n}\r\n\r\nexport async function saveCheckpoint(payload: Checkpoint): Promise<void> {\r\n  const timestamp = new Date().toLocaleString();\r\n  const response = await client.post('/api/checkpoint', { ...payload, timestamp });\r\n  return response.data;\r\n}\r\n\r\nexport async function loadCheckpoint(id: string): Promise<Checkpoint> {\r\n  const response = await client.get(`/api/checkpoint/${id}`);\r\n  return response.data;\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { fetchCheckpoints, loadCheckpoint, saveCheckpoint } from '../api/checkpoint';\r\nimport { CheckpointMeta } from '../entities';\r\nimport { BrowserState } from './browser';\r\nimport { EditorState } from './editor';\r\nimport { NotebookState } from './notebook';\r\n\r\nexport type CheckpointState = CheckpointMeta[];\r\n\r\nconst initialState: CheckpointState = [];\r\n\r\nexport const performFetchCheckpoints = createAsyncThunk(\r\n  'checkpoint/fetch',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      return await fetchCheckpoints();\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const performSaveCheckpoint = createAsyncThunk(\r\n  'checkpoint/save',\r\n  async (_, { getState, rejectWithValue }) => {\r\n    const { editor, notebook, browser } = getState() as {editor: EditorState, notebook: NotebookState, browser: BrowserState};\r\n\r\n    if (!notebook.selectedDataset || browser === null) { return rejectWithValue('Rejected'); }\r\n\r\n    try {\r\n      return await saveCheckpoint({\r\n        editorState: editor,\r\n        browserState: browser,\r\n        selectedDataset: notebook.selectedDataset,\r\n      });\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const performLoadCheckpoint = createAsyncThunk(\r\n  'checkpoint/load',\r\n  async (id: string, { rejectWithValue }) => {\r\n    try {\r\n      return await loadCheckpoint(id);\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const checkpointSlice = createSlice({\r\n  name: 'checkpoint',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performFetchCheckpoints.fulfilled, (state, action) => action.payload);\r\n  },\r\n});\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { updateBrowser } from '../api/browser';\r\nimport { Cell } from '../entities';\r\nimport { performLoadCheckpoint } from './checkpoint';\r\nimport { NotebookState } from './notebook';\r\n\r\nexport type EditorState = {\r\n  cells: Cell[];\r\n  cellCounter: number;\r\n  execCounter: number;\r\n  lastExecutedCellId: number | null;\r\n  updateBrowserCellId: number | null;\r\n}\r\n\r\nconst initialState: EditorState = {\r\n  cells: [],\r\n  cellCounter: 0,\r\n  execCounter: 0,\r\n  lastExecutedCellId: null,\r\n  updateBrowserCellId: null,\r\n};\r\n\r\nexport const performRunCell = createAsyncThunk(\r\n  'editor/runCell',\r\n  async (index: number, { getState, rejectWithValue }) => {\r\n    const { notebook, editor } = getState() as {notebook: NotebookState, editor: EditorState};\r\n\r\n    if (index >= editor.cells.length || !notebook.selectedDataset) {\r\n      return rejectWithValue(null);\r\n    }\r\n\r\n    const targetCell = editor.cells[index];\r\n\r\n    try {\r\n      return await updateBrowser({\r\n        selectedDataset: notebook.selectedDataset,\r\n        editorContent: targetCell.editorContent,\r\n      });\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const editorSlice = createSlice({\r\n  name: 'editor',\r\n  initialState,\r\n  reducers: {\r\n    addCell: (state: EditorState, { payload }: PayloadAction<number | null>) => {\r\n      state.cellCounter += 1;\r\n\r\n      const newCell = {\r\n        id: state.cellCounter,\r\n        execStatus: ' ',\r\n        errorStatus: false,\r\n        editorContent: '',\r\n        numOfLines: 0,\r\n      };\r\n\r\n      if (payload !== null) {\r\n        // Add a new cell after the focused cell.\r\n        state.cells.splice(payload + 1, 0, newCell);\r\n      } else {\r\n        // If no cell or none focused yet, add the new cell at the end.\r\n        state.cells.push(newCell);\r\n      }\r\n    },\r\n\r\n    changeCell: (state: EditorState, { payload: { index, value } }: PayloadAction<{index: number, value: string}>) => {\r\n      state.cells[index].numOfLines = value.split('\\n').length;\r\n      state.cells[index].editorContent = value;\r\n    },\r\n\r\n    deleteCell: (state: EditorState, { payload }: PayloadAction<number | null>) => {\r\n      if (payload !== null) {\r\n        // Remove focused cell.\r\n        state.cells.splice(payload, 1);\r\n      } else {\r\n        // Remove the cell at the end.\r\n        state.cells.pop();\r\n      }\r\n    },\r\n\r\n    swapCell: (state: EditorState, { payload: { focusedCellIndex, step } }: PayloadAction<{focusedCellIndex: number, step: number}>) => {\r\n      const from = focusedCellIndex;\r\n      const to = from + step;\r\n\r\n      // Swap the cells with `from` index and `to` index.\r\n      state.cells.splice(to, 0, state.cells.splice(from, 1)[0]);\r\n    },\r\n\r\n    loadCells: (state: EditorState, { payload }: PayloadAction<Cell[]>) => {\r\n      state.cells = payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performRunCell.pending, (state, action) => {\r\n      const targetCellIndex = action.meta.arg;\r\n      const targetCell = state.cells[targetCellIndex];\r\n\r\n      targetCell.execStatus = '*';\r\n      targetCell.errorStatus = false;\r\n    });\r\n\r\n    builder.addCase(performRunCell.fulfilled, (state, action) => {\r\n      const targetCellIndex = action.meta.arg;\r\n      const targetCell = state.cells[targetCellIndex];\r\n\r\n      state.execCounter += 1;\r\n\r\n      targetCell.execStatus = state.execCounter;\r\n      targetCell.errorStatus = action.payload.hasCellError;\r\n      state.lastExecutedCellId = targetCell.id;\r\n      if (action.payload.shouldUpdateBrowser) state.updateBrowserCellId = targetCell.id;\r\n    });\r\n\r\n    builder.addCase(performLoadCheckpoint.fulfilled, (state, action) => action.payload.editorState);\r\n  },\r\n});\r\n\r\nexport const {\r\n  addCell,\r\n  changeCell,\r\n  deleteCell,\r\n  swapCell,\r\n  loadCells,\r\n} = editorSlice.actions;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { performRunCell } from './editor';\r\nimport { performFetchCheckpoints, performLoadCheckpoint, performSaveCheckpoint } from './checkpoint';\r\n\r\nexport type NotebookState = {\r\n  loading: boolean;\r\n  error: string | null;\r\n  selectedDataset: string | null;\r\n  showCheckpointModal: boolean;\r\n}\r\n\r\nconst initialState: NotebookState = {\r\n  loading: false,\r\n  error: null,\r\n  selectedDataset: null,\r\n  showCheckpointModal: false,\r\n};\r\n\r\nexport const notebookSlice = createSlice({\r\n  name: 'notebook',\r\n  initialState,\r\n  reducers: {\r\n    selectDataset: (state: NotebookState, { payload }: PayloadAction<string>) => {\r\n      state.selectedDataset = payload;\r\n    },\r\n    toggleCheckpointModal: (state: NotebookState, { payload }: PayloadAction<boolean>) => {\r\n      state.showCheckpointModal = payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performRunCell.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performRunCell.fulfilled, (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performRunCell.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n\r\n    builder.addCase(performFetchCheckpoints.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performFetchCheckpoints.fulfilled, (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performFetchCheckpoints.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n\r\n    builder.addCase(performSaveCheckpoint.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performSaveCheckpoint.fulfilled, (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performSaveCheckpoint.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n\r\n    builder.addCase(performLoadCheckpoint.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performLoadCheckpoint.fulfilled, (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performLoadCheckpoint.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n  },\r\n});\r\n\r\nexport const { selectDataset, toggleCheckpointModal } = notebookSlice.actions;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { performRunCell } from './editor';\r\nimport { performLoadCheckpoint } from './checkpoint';\r\n\r\nexport type BrowserState = {\r\n  raw: string;\r\n  table: string;\r\n  console: string;\r\n}\r\n\r\nconst initialState: BrowserState = {\r\n  raw: '',\r\n  table: '',\r\n  console: '',\r\n};\r\n\r\nexport const browserSlice = createSlice({\r\n  name: 'browser',\r\n  initialState: initialState as BrowserState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performRunCell.fulfilled, (state, action) => {\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      const { hasCellError, shouldUpdateBrowser, ...results } = action.payload;\r\n      return { ...state, ...results };\r\n    });\r\n\r\n    builder.addCase(performLoadCheckpoint.fulfilled, (state, action) => action.payload.browserState);\r\n  },\r\n});\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { notebookSlice } from './slices/notebook';\r\nimport { editorSlice } from './slices/editor';\r\nimport { browserSlice } from './slices/browser';\r\nimport { checkpointSlice } from './slices/checkpoint';\r\n\r\nconst rootReducer = combineReducers({\r\n  notebook: notebookSlice.reducer,\r\n  browser: browserSlice.reducer,\r\n  editor: editorSlice.reducer,\r\n  checkpoint: checkpointSlice.reducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport const { dispatch } = store;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm, SubmitHandler, FieldValues } from 'react-hook-form';\r\n\r\nimport { AppState } from '../store';\r\nimport { selectDataset } from '../slices/notebook';\r\n\r\nconst demoDatasets = ['nobel_prizes_incorrect', 'movies_incorrect'];\r\n\r\nfunction DatasetSelection(): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n  const selectedDataset = useSelector<AppState, string | null>((state) => state.notebook.selectedDataset);\r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n  const onSubmit: SubmitHandler<FieldValues> = (data) => dispatch(selectDataset(data.dataset));\r\n\r\n  const radioField = (name: string) => (\r\n    <label htmlFor={name}>\r\n      <input\r\n        {...register('dataset', { required: true })}\r\n        id={name}\r\n        type=\"radio\"\r\n        value={name}\r\n      />\r\n      <span className={`ml-2 inline-block ${selectedDataset === name && 'font-bold'}`}>\r\n        {name}\r\n      </span>\r\n    </label>\r\n  );\r\n\r\n  return (\r\n    <form\r\n      className=\"flex flex-col items-center justify-center\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      {demoDatasets.map((name) => radioField(name))}\r\n      {errors.dataset && <span className=\"py-2 text-red-500\">Please choose a dataset</span>}\r\n      <button type=\"submit\" className=\"button-relief\">\r\n        Select\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default DatasetSelection;\r\n","import React, { useState, useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-json';\r\nimport 'ace-builds/src-noconflict/theme-monokai';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\n\r\nimport { AppState } from '../store';\r\n\r\nenum Mode {\r\n  Raw = 'RAW',\r\n  Table = 'TABLE',\r\n  Console = 'CONSOLE',\r\n}\r\n\r\nfunction DataBrowser(): React.ReactElement {\r\n  const loading = useSelector<AppState, boolean>((state) => state.notebook.loading);\r\n  const error = useSelector<AppState, string | null>((state) => state.notebook.error);\r\n  const selectedDataset = useSelector<AppState, string | null>((state) => state.notebook.selectedDataset);\r\n\r\n  const [browserMode, setBrowserMode] = useState(Mode.Raw);\r\n  const rawData = useSelector<AppState, string>((state) => (state.browser.raw));\r\n  const tableData = useSelector<AppState, string>((state) => (state.browser.table));\r\n  const consoleOutput = useSelector<AppState, string>((state) => (state.browser.console));\r\n\r\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    setBrowserMode(e.currentTarget.name as Mode);\r\n  };\r\n\r\n  const codeView = useMemo(() => (\r\n    <AceEditor\r\n      width=\"100%\"\r\n      mode=\"json\"\r\n      theme=\"monokai\"\r\n      readOnly\r\n      fontSize={16}\r\n      minLines={39}\r\n      maxLines={39}\r\n      showPrintMargin={false}\r\n      value={rawData}\r\n    />\r\n  ), [rawData]);\r\n\r\n  const tableView = useMemo(() => (\r\n    <div className=\"px-4 w-full h-80vh bg-gray-50 border border-gray-300 block rounded-md whitespace-nowrap overflow-scroll\">\r\n      <ReactMarkdown remarkPlugins={[gfm]}>\r\n        {tableData}\r\n      </ReactMarkdown>\r\n    </div>\r\n  ), [tableData]);\r\n\r\n  const consoleView = (\r\n    <div className=\"px-4 w-full h-80vh bg-gray-50 border border-gray-300 block rounded-md text-left overflow-scroll\">\r\n      {error && <span className=\"py-2 text-red-500\">{error}</span>}\r\n      {(!selectedDataset) && '\\nNo dataset selected. Please select a dataset first.'}\r\n      <span className=\"font-mono\">{consoleOutput}</span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"px-4 max-w-4xl min-h-screen\">\r\n      <div className=\"py-2\">\r\n        <h1 className=\"font-bold text-3xl uppercase p-4\">Data Browser</h1>\r\n      </div>\r\n      <div className=\"flex flex-row justify-between w-full bg-gray-50 border border-gray-300 rounded-t-md\">\r\n        <div className=\"text-left\">\r\n          <button type=\"button\" name={Mode.Raw} onClick={handleClick} className={`py-2 px-4 inline-block font-semibold ${(browserMode === Mode.Raw) ? 'text-blue-600' : 'text-gray-400'}`}>Raw</button>\r\n          <button type=\"button\" name={Mode.Table} onClick={handleClick} className={`py-2 px-4 inline-block font-semibold ${(browserMode === Mode.Table) ? 'text-blue-600' : 'text-gray-400'}`}>Table</button>\r\n          <button type=\"button\" name={Mode.Console} onClick={handleClick} className={`py-2 px-4 inline-block font-semibold ${(browserMode === Mode.Console) ? 'text-blue-600' : 'text-gray-400'}`}>Console</button>\r\n        </div>\r\n        {loading && (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-700 m-2 outline-none animate-spin transform rotate-180\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n          </svg>\r\n        )}\r\n      </div>\r\n      {browserMode === Mode.Raw && codeView}\r\n      {browserMode === Mode.Table && tableView}\r\n      {browserMode === Mode.Console && consoleView}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataBrowser;\r\n","import React from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\ninterface IProps {\r\n  handleAddCell: () => void;\r\n  handleDeleteCell: () => void;\r\n  handleMoveUpCell: () => void;\r\n  handleMoveDownCell: () => void;\r\n  handleRunCell: () => void;\r\n  handleRunAllCells: () => void;\r\n  handleSaveCheckpoint: () => void;\r\n  handleLoadCheckpoint: () => void;\r\n}\r\n\r\nexport default function TopBar({\r\n  handleAddCell,\r\n  handleDeleteCell,\r\n  handleMoveUpCell,\r\n  handleMoveDownCell,\r\n  handleRunCell,\r\n  handleRunAllCells,\r\n  handleSaveCheckpoint,\r\n  handleLoadCheckpoint,\r\n}: IProps): React.ReactElement {\r\n  return (\r\n    <div className=\"px-4 max-w-4xl max-h-screen bg-gray-50 border border-gray-300 rounded-md text-left\">\r\n      <div className=\"flex flex-row justify-between\">\r\n        <div className=\"flex flex-row\">\r\n          <svg onClick={handleAddCell} data-tip=\"Add New Cell\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n          </svg>\r\n          <svg onClick={handleDeleteCell} data-tip=\"Delete Cell\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-red-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n          </svg>\r\n          <svg onClick={handleMoveUpCell} data-tip=\"Move Cell Up\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 11l5-5m0 0l5 5m-5-5v12\" />\r\n          </svg>\r\n          <svg onClick={handleMoveDownCell} data-tip=\"Move Cell Down\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 13l-5 5m0 0l-5-5m5 5V6\" />\r\n          </svg>\r\n          <svg onClick={handleRunCell} data-tip=\"Run Cell\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n          </svg>\r\n          <svg onClick={handleRunAllCells} data-tip=\"Run All Cells\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\r\n          </svg>\r\n        </div>\r\n        <div className=\"flex flex-row\">\r\n          <svg onClick={handleSaveCheckpoint} xmlns=\"http://www.w3.org/2000/svg\" data-tip=\"Save Checkpoint\" data-for=\"topButtons\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\r\n          </svg>\r\n          <svg onClick={handleLoadCheckpoint} xmlns=\"http://www.w3.org/2000/svg\" data-tip=\"Load Checkpoint\" data-for=\"topButtons\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <ReactTooltip id=\"topButtons\" place=\"top\" effect=\"solid\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-python';\r\nimport 'ace-builds/src-noconflict/theme-chrome';\r\n\r\nimport { AppState } from '../../store';\r\nimport { changeCell } from '../../slices/editor';\r\n\r\ninterface IProps {\r\n  index: number;\r\n  setFocusedCellIndex: (value: number) => void;\r\n}\r\n\r\nfunction Cell({ index, setFocusedCellIndex }: IProps): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n\r\n  const execStatus = useSelector<AppState, string | number>((state) => (\r\n    state.editor.cells[index].execStatus\r\n  ));\r\n\r\n  const cellContent = useSelector<AppState, string>((state) => (\r\n    state.editor.cells[index].editorContent\r\n  ));\r\n\r\n  const numOfLines = useSelector<AppState, number>((state) => (\r\n    state.editor.cells[index].numOfLines\r\n  ));\r\n\r\n  const hasError = useSelector<AppState, boolean>((state) => (\r\n    state.editor.cells[index].errorStatus\r\n  ));\r\n\r\n  const islastExecuted = useSelector<AppState, boolean>((state) => (\r\n    state.editor.lastExecutedCellId === state.editor.cells[index].id\r\n  ));\r\n\r\n  const hasUpdatedBrowser = useSelector<AppState, boolean>((state) => (\r\n    state.editor.updateBrowserCellId === state.editor.cells[index].id\r\n  ));\r\n\r\n  // Determine color of the cell's left border.\r\n  let leftBorder = '';\r\n  if (islastExecuted) leftBorder = 'border-l-4 border-green-500';\r\n  if (hasUpdatedBrowser) leftBorder = 'border-l-4 border-blue-500';\r\n  if (hasError) leftBorder = 'border-l-4 border-red-500';\r\n\r\n  return (\r\n    <div className={`flex flex-col p-2 ${leftBorder} rounded shadow-md relative hover:shadow-lg overflow-hidden`}>\r\n      <div className=\"flex flex-row justify-between items-start\">\r\n        <span className=\"text-lg mr-4 min-w-max\">{`[${execStatus}]: `}</span>\r\n        <div style={{ width: '93%' }} className={`mt-2 ring-4 ring-gray-400 ${numOfLines <= 5 ? 'focus-within:ring-blue-500' : 'focus-within:ring-yellow-500'} relative`}>\r\n          <AceEditor\r\n            width=\"100%\"\r\n            mode=\"python\"\r\n            theme=\"chrome\"\r\n            showGutter={false}\r\n            fontSize={16}\r\n            minLines={1}\r\n            maxLines={15}\r\n            value={cellContent}\r\n            onFocus={() => setFocusedCellIndex(index)}\r\n            onChange={(value: string) => dispatch(changeCell({ index, value }))}\r\n            wrapEnabled\r\n          />\r\n        </div>\r\n      </div>\r\n      {numOfLines > 5 && <span className=\"mt-2 text-yellow-500 text-right font-bold\">Recommended maximum number of lines is 5</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cell;\r\n","/**\r\n * Create a range of numbers.\r\n *\r\n * @param min The first number in the range.\r\n * @param max The last number in the range.\r\n * @returns The range.\r\n */\r\nexport function range(min: number, max?: number): number[] {\r\n  // If only one number is provided, start at zero\r\n  if (max === undefined) {\r\n    max = min;\r\n    min = 0;\r\n  }\r\n\r\n  // Create a ranged array\r\n  return Array.from(new Array(max - min).keys()).map((num) => num + min);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppState, dispatch } from '../../store';\r\nimport {\r\n  addCell,\r\n  deleteCell,\r\n  swapCell,\r\n  performRunCell,\r\n} from '../../slices/editor';\r\nimport { performSaveCheckpoint } from '../../slices/checkpoint';\r\nimport { toggleCheckpointModal } from '../../slices/notebook';\r\nimport TopBar from './TopBar';\r\nimport Cell from './Cell';\r\nimport { range } from '../../utils';\r\n\r\nexport default function Editor(): React.ReactElement {\r\n  const numOfCells = useSelector<AppState, number>((state) => state.editor.cells.length);\r\n\r\n  const [focusedCellIndex, setFocusedCellIndex] = useState<number | null>(null);\r\n\r\n  const handleAddCell = () => dispatch(addCell(focusedCellIndex));\r\n\r\n  const handleDeleteCell = () => {\r\n    dispatch(deleteCell(focusedCellIndex));\r\n    setFocusedCellIndex(null);\r\n  };\r\n\r\n  const handleMoveUpCell = () => {\r\n    if (focusedCellIndex !== null && focusedCellIndex > 0) {\r\n      dispatch(swapCell({ focusedCellIndex, step: -1 }));\r\n      setFocusedCellIndex(focusedCellIndex - 1);\r\n    }\r\n  };\r\n\r\n  const handleMoveDownCell = () => {\r\n    if (focusedCellIndex !== null && focusedCellIndex < (numOfCells - 1)) {\r\n      dispatch(swapCell({ focusedCellIndex, step: 1 }));\r\n      setFocusedCellIndex(focusedCellIndex + 1);\r\n    }\r\n  };\r\n\r\n  const handleRunCell = () => {\r\n    if (focusedCellIndex !== null) {\r\n      // Run the focused cell.\r\n      dispatch(performRunCell(focusedCellIndex));\r\n    } else {\r\n      // Run the last cell.\r\n      dispatch(performRunCell(numOfCells - 1));\r\n    }\r\n  };\r\n\r\n  const handleRunAllCells = async () => {\r\n    for (const index of range(numOfCells)) {\r\n      try {\r\n        const result = await dispatch(performRunCell(index));\r\n        const { hasCellError } = unwrapResult(result);\r\n\r\n        // Stop running subsequent cells if there is an error.\r\n        if (hasCellError) break;\r\n      } catch (e) {\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSaveCheckpoint = () => {\r\n    dispatch(performSaveCheckpoint());\r\n  };\r\n\r\n  const handleLoadCheckpoint = () => {\r\n    dispatch(toggleCheckpointModal(true));\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div className=\"py-2\">\r\n        <h1 className=\"font-bold text-3xl uppercase p-4\">Editor</h1>\r\n      </div>\r\n      <TopBar\r\n        handleAddCell={handleAddCell}\r\n        handleDeleteCell={handleDeleteCell}\r\n        handleMoveUpCell={handleMoveUpCell}\r\n        handleMoveDownCell={handleMoveDownCell}\r\n        handleRunCell={handleRunCell}\r\n        handleRunAllCells={handleRunAllCells}\r\n        handleSaveCheckpoint={handleSaveCheckpoint}\r\n        handleLoadCheckpoint={handleLoadCheckpoint}\r\n      />\r\n      <div className=\"px-4 max-w-4xl h-80vh bg-gray-50 border border-gray-300 block rounded-md text-left overflow-y-scroll\">\r\n        <div className=\"flex flex-col m-2 gap-4\">\r\n          {range(numOfCells).map((i) => <Cell key={i} index={i} setFocusedCellIndex={setFocusedCellIndex} />)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { SetStateAction } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppState } from '../../store';\r\nimport { CheckpointMeta } from '../../entities';\r\n\r\ninterface IProps {\r\n    id: string;\r\n    selectedId: string | null;\r\n    setSelectedId: React.Dispatch<SetStateAction<string | null>>;\r\n}\r\n\r\nexport default function CheckpointDetail({ id, selectedId, setSelectedId }: IProps): React.ReactElement {\r\n  const checkpoint = useSelector<AppState, CheckpointMeta | undefined>((state) => (\r\n    state.checkpoint.find((c) => c.id === id)\r\n  ));\r\n\r\n  return (\r\n    <li onClick={() => setSelectedId(id)} className={`p-4 hover:bg-gray-100 cursor-pointer text-center ${selectedId === id && 'bg-gray-100'}`} role=\"presentation\">\r\n      {checkpoint?.timestamp}\r\n    </li>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { AppState } from '../../store';\r\nimport { performFetchCheckpoints, performLoadCheckpoint } from '../../slices/checkpoint';\r\nimport { toggleCheckpointModal } from '../../slices/notebook';\r\nimport CheckpointDetail from './CheckpointDetail';\r\n\r\nexport default function Checkpoint(): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector<AppState, boolean>((state) => state.notebook.loading);\r\n  const ids = useSelector<AppState, string[]>((state) => (\r\n    state.checkpoint.map((checkpointDetail) => checkpointDetail.id)\r\n  ));\r\n  const [selectedId, setSelectedId] = useState<string | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(performFetchCheckpoints());\r\n  }, []);\r\n\r\n  const handleLoadCheckpoint = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedId) {\r\n      setError('Invalid selection!');\r\n      return;\r\n    }\r\n    dispatch(performLoadCheckpoint(selectedId));\r\n    dispatch(toggleCheckpointModal(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-400 h-screen w-screen flex justify-center items-center\">\r\n      <div className=\"mb-24 bg-white rounded shadow-lg w-2/12\">\r\n        <div className=\"border-b px-4 py-2 flex justify-between items-center\">\r\n          <h3 className=\"font-semibold text-lg uppercase\">Load checkpoint</h3>\r\n          <svg onClick={() => dispatch(toggleCheckpointModal(false))} xmlns=\"http://www.w3.org/2000/svg\" className=\"button-icon hover:text-red-700\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n          </svg>\r\n        </div>\r\n        <div className=\"flex flex-col justify-center\">\r\n          {ids.length > 0\r\n            ? (\r\n              <ul className=\"divide-y divide-gray-300\">\r\n                {ids.map((id) => <CheckpointDetail key={id} id={id} selectedId={selectedId} setSelectedId={setSelectedId} />)}\r\n              </ul>\r\n            )\r\n            : <span className=\"m-4\">{loading ? 'Loading...' : 'No checkpoint has been created'}</span>}\r\n        </div>\r\n        <div className=\"flex justify-end items-center w-100 border-t px-2\">\r\n          {error && <span className=\"px-4 py-2 text-red-500\">{error}</span>}\r\n          <button onClick={handleLoadCheckpoint} type=\"submit\" className=\"button bg-blue-600 hover:bg-blue-700\">Load</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppState } from '../store';\r\nimport DatasetSelection from '../components/DatasetSelection';\r\nimport DataBrowser from '../components/DataBrowser';\r\nimport Editor from '../components/editor';\r\nimport Checkpoint from '../components/checkpoint';\r\n\r\nfunction HomeView(): React.ReactElement {\r\n  const showCheckpointModal = useSelector<AppState, boolean>((state) => state.notebook.showCheckpointModal);\r\n\r\n  return (\r\n    <div className=\"h-full w-screen flex flex-col justify-center\">\r\n      <nav className=\"flex flex-row items-center px-8 py-1 bg-blue-600 border-b-8 border-blue-200\">\r\n        <div className=\"flex flex-row items-center text-white\">\r\n          <a href=\"index\" className=\"no-underline py-2 hover:text-gray-300\"><h1 className=\"font-bold text-3xl\">Data Jupyter</h1></a>\r\n        </div>\r\n      </nav>\r\n      {showCheckpointModal ? <Checkpoint /> : (\r\n        <div className=\"bg-gray-100\">\r\n          <main className=\"h-full container mx-auto px-4 py-4 text-center\">\r\n            <div className=\"pt-16\">\r\n              <h1 className=\"font-bold text-3xl uppercase p-4\">Choose a demo dataset</h1>\r\n              <DatasetSelection />\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-6 py-4\">\r\n              <Editor />\r\n              <DataBrowser />\r\n            </div>\r\n          </main>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeView;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store';\r\nimport HomeView from './views/HomeView';\r\n\r\nfunction App(): React.ReactElement {\r\n  return (\r\n    <Provider store={store}>\r\n      <HomeView />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}