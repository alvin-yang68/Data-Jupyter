{"version":3,"sources":["api/index.tsx","api/dataset.tsx","api/browser.tsx","api/checkpoint.tsx","slices/checkpoint.tsx","slices/editor.tsx","slices/notebook.tsx","slices/browser.tsx","store.tsx","components/DatasetSelect.tsx","components/DataBrowser.tsx","components/editor/Cell.tsx","components/editor/CellsList.tsx","components/checkpoint/Checkpoint.tsx","components/checkpoint/CheckpointsList.tsx","views/HomeView.tsx","App.tsx","index.tsx"],"names":["client","axios","create","validateStatus","status","loadDataset","selectedDataset","a","get","response","data","updateBrowser","editorContent","post","fetchCheckpoints","saveCheckpoint","payload","timestamp","Date","toLocaleString","loadCheckpoint","id","performFetchCheckpoints","createAsyncThunk","_","rejectWithValue","performSaveCheckpoint","getState","editor","notebook","browser","editorState","browserState","performLoadCheckpoint","checkpointSlice","createSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","editorSlice","cells","cellCounter","execCounter","focusedCellId","lastExecutedCellId","updateBrowserCellId","focusCell","addCell","newCell","execStatus","errorStatus","numOfLines","focusedCellIdx","findIndex","cell","splice","push","changeCell","index","split","length","setCellStatus","deleteCell","moveCell","from","to","Math","min","max","loadCells","setLastExecutedCellId","setBrowserUpdateCellId","actions","performRunCell","dispatch","targetCell","find","cellError","browserUpdated","results","performRunAllCells","rest","performSelectDataset","notebookSlice","loading","error","showCheckpointModal","selectDataset","toggleCheckpointModal","pending","rejected","message","browserSlice","raw","table","console","rootReducer","combineReducers","reducer","checkpoint","store","configureStore","DatasetSelect","Mode","useDispatch","loadError","useSelector","useForm","register","handleSubmit","errors","formState","className","onSubmit","dataset","htmlFor","required","type","value","DataBrowser","useState","Raw","browserMode","setBrowserMode","rawData","tableData","consoleOutput","handleClick","e","preventDefault","currentTarget","codeView","useMemo","width","mode","theme","readOnly","fontSize","minLines","maxLines","showPrintMargin","tableView","remarkPlugins","gfm","consoleView","onClick","Table","Console","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Cell","c","leftBorder","style","showGutter","onFocus","onChange","wrapEnabled","CellsList","cellIds","map","shallowEqual","data-tip","data-for","place","effect","Checkpoint","selectedId","setSelectedId","role","CheckpointsList","ids","checkpointDetail","setError","HomeView","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbbb2f91.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst client = axios.create({\r\n  validateStatus: (status) => status < 300,\r\n});\r\n\r\nexport default client;\r\n","import client from './index';\r\nimport { DataEntity } from '../entities';\r\n\r\nexport async function loadDataset(selectedDataset: string): Promise<DataEntity> {\r\n  const response = await client.get(`/api/dataset/${selectedDataset}`);\r\n  return response.data;\r\n}\r\n","import client from './index';\r\nimport { DataEntity } from '../entities';\r\n\r\ninterface UpdateBrowserResult extends DataEntity {\r\n  cellError: boolean;\r\n  browserUpdated: boolean;\r\n}\r\n\r\nexport async function updateBrowser(editorContent: string): Promise<UpdateBrowserResult> {\r\n  const response = await client.post('/api/browser', { editorContent });\r\n  return response.data;\r\n}\r\n","import client from './index';\r\n\r\nimport { CheckpointEntity, CheckpointDetailEntity } from '../entities';\r\n\r\nexport async function fetchCheckpoints(): Promise<CheckpointDetailEntity[]> {\r\n  const response = await client.get('/api/checkpoint');\r\n  return response.data;\r\n}\r\n\r\nexport async function saveCheckpoint(payload: CheckpointEntity): Promise<void> {\r\n  const timestamp = new Date().toLocaleString();\r\n  const response = await client.post('/api/checkpoint', { ...payload, timestamp });\r\n  return response.data;\r\n}\r\n\r\nexport async function loadCheckpoint(id: string): Promise<CheckpointEntity> {\r\n  const response = await client.get(`/api/checkpoint/${id}`);\r\n  return response.data;\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { fetchCheckpoints, loadCheckpoint, saveCheckpoint } from '../api/checkpoint';\r\nimport { CheckpointDetailEntity } from '../entities';\r\nimport { BrowserState } from './browser';\r\nimport { EditorState } from './editor';\r\nimport { NotebookState } from './notebook';\r\n\r\nexport type CheckpointState = CheckpointDetailEntity[];\r\n\r\nconst initialState: CheckpointState = [];\r\n\r\nexport const performFetchCheckpoints = createAsyncThunk(\r\n  'checkpoint/fetch',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      return await fetchCheckpoints();\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const performSaveCheckpoint = createAsyncThunk(\r\n  'checkpoint/save',\r\n  async (_, { getState, rejectWithValue }) => {\r\n    const { editor, notebook, browser } = getState() as {editor: EditorState, notebook: NotebookState, browser: BrowserState};\r\n\r\n    if (!notebook.selectedDataset || browser === null) { return rejectWithValue('Rejected'); }\r\n\r\n    try {\r\n      return await saveCheckpoint({\r\n        editorState: editor,\r\n        browserState: browser,\r\n        selectedDataset: notebook.selectedDataset,\r\n      });\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const performLoadCheckpoint = createAsyncThunk(\r\n  'checkpoint/load',\r\n  async (id: string, { rejectWithValue }) => {\r\n    try {\r\n      return await loadCheckpoint(id);\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const checkpointSlice = createSlice({\r\n  name: 'checkpoint',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performFetchCheckpoints.fulfilled, (state, action) => action.payload);\r\n  },\r\n});\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { updateBrowser } from '../api/browser';\r\nimport { CellEntity, DataEntity } from '../entities';\r\nimport { performLoadCheckpoint } from './checkpoint';\r\n\r\nexport type EditorState = {\r\n  cells: CellEntity[];\r\n  cellCounter: number;\r\n  execCounter: number;\r\n  focusedCellId: number | null;\r\n  lastExecutedCellId: number | null;\r\n  updateBrowserCellId: number | null;\r\n}\r\n\r\nconst initialState: EditorState = {\r\n  cells: [],\r\n  cellCounter: 0,\r\n  execCounter: 0,\r\n  focusedCellId: null,\r\n  lastExecutedCellId: null,\r\n  updateBrowserCellId: null,\r\n};\r\n\r\nexport const editorSlice = createSlice({\r\n  name: 'editor',\r\n  initialState,\r\n  reducers: {\r\n    focusCell: (state: EditorState, { payload }: PayloadAction<number | undefined>) => {\r\n      if (payload) {\r\n        state.focusedCellId = payload;\r\n      } else {\r\n        state.focusedCellId = null;\r\n      }\r\n    },\r\n    addCell: (state: EditorState) => {\r\n      state.cellCounter += 1;\r\n      const newCell = {\r\n        id: state.cellCounter,\r\n        execStatus: '',\r\n        errorStatus: false,\r\n        editorContent: '',\r\n        numOfLines: 0,\r\n      };\r\n      if (state.focusedCellId) {\r\n        const focusedCellIdx = state.cells.findIndex((cell) => cell.id === state.focusedCellId);\r\n        if (focusedCellIdx > -1) state.cells.splice(focusedCellIdx + 1, 0, newCell);\r\n      } else {\r\n        state.cells.push(newCell);\r\n      }\r\n    },\r\n    changeCell: (state: EditorState, { payload }: PayloadAction<string>) => {\r\n      const index = state.cells.findIndex((cell) => cell.id === state.focusedCellId);\r\n      if (index > -1) {\r\n        state.cells[index].numOfLines = payload.split('\\n').length;\r\n        state.cells[index].editorContent = payload;\r\n      }\r\n    },\r\n    setCellStatus: (state: EditorState, { payload }: PayloadAction<{id: number, execStatus?: string, errorStatus: boolean }>) => {\r\n      let execStatus: (string | number);\r\n      if (payload.execStatus) {\r\n        execStatus = payload.execStatus;\r\n      } else {\r\n        state.execCounter += 1;\r\n        execStatus = state.execCounter;\r\n      }\r\n      const index = state.cells.findIndex((cell) => cell.id === payload.id);\r\n      if (index > -1) {\r\n        state.cells[index].execStatus = execStatus;\r\n        state.cells[index].errorStatus = payload.errorStatus;\r\n      }\r\n    },\r\n    deleteCell: (state: EditorState) => {\r\n      const index = state.cells.findIndex((cell) => cell.id === state.focusedCellId);\r\n      if (index > -1) state.cells.splice(index, 1);\r\n    },\r\n    moveCell: (state: EditorState, { payload }: PayloadAction<number>) => {\r\n      const from = state.cells.findIndex((cell) => cell.id === state.focusedCellId);\r\n      const to = Math.min(Math.max(from + payload, 0), state.cells.length - 1);\r\n      if (from > -1) state.cells.splice(to, 0, state.cells.splice(from, 1)[0]);\r\n    },\r\n    loadCells: (state: EditorState, { payload }: PayloadAction<CellEntity[]>) => {\r\n      state.cells = payload;\r\n    },\r\n    setLastExecutedCellId: (state: EditorState, { payload }: PayloadAction<number>) => {\r\n      state.lastExecutedCellId = payload;\r\n    },\r\n    setBrowserUpdateCellId: (state: EditorState, { payload }: PayloadAction<number>) => {\r\n      state.updateBrowserCellId = payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performLoadCheckpoint.fulfilled, (state, action) => action.payload.editorState);\r\n  },\r\n});\r\n\r\nexport const {\r\n  focusCell,\r\n  addCell,\r\n  changeCell,\r\n  setCellStatus,\r\n  deleteCell,\r\n  moveCell,\r\n  loadCells,\r\n  setLastExecutedCellId,\r\n  setBrowserUpdateCellId,\r\n} = editorSlice.actions;\r\n\r\nexport const performRunCell = createAsyncThunk(\r\n  'editor/runCell',\r\n  async (_, { getState, dispatch, rejectWithValue }) => {\r\n    const { editor } = getState() as {editor: EditorState};\r\n\r\n    const targetCell = editor.cells.find((cell) => cell.id === editor.focusedCellId);\r\n    if (!targetCell) return rejectWithValue('Rejected');\r\n\r\n    try {\r\n      dispatch(setCellStatus({ id: targetCell.id, execStatus: '*', errorStatus: false }));\r\n      const { cellError, browserUpdated, ...results } = await updateBrowser(targetCell.editorContent);\r\n      dispatch(setCellStatus({ id: targetCell.id, errorStatus: cellError }));\r\n      dispatch(setLastExecutedCellId(targetCell.id));\r\n      if (browserUpdated) dispatch(setBrowserUpdateCellId(targetCell.id));\r\n      return results;\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const performRunAllCells = createAsyncThunk(\r\n  'editor/runAllCells',\r\n  async (_, { dispatch, getState, rejectWithValue }) => {\r\n    const { editor } = getState() as {editor: EditorState};\r\n\r\n    try {\r\n      let results: DataEntity | undefined;\r\n      for (const targetCell of editor.cells) {\r\n        dispatch(setCellStatus({ id: targetCell.id, execStatus: '*', errorStatus: false }));\r\n        const { cellError, browserUpdated, ...rest } = await updateBrowser(targetCell.editorContent);\r\n        results = rest;\r\n        dispatch(setCellStatus({ id: targetCell.id, errorStatus: cellError }));\r\n        dispatch(setLastExecutedCellId(targetCell.id));\r\n        if (browserUpdated) dispatch(setBrowserUpdateCellId(targetCell.id));\r\n      }\r\n      return results;\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { loadDataset } from '../api/dataset';\r\nimport { performRunCell, performRunAllCells } from './editor';\r\nimport { performFetchCheckpoints, performLoadCheckpoint, performSaveCheckpoint } from './checkpoint';\r\n\r\nexport type NotebookState = {\r\n  loading: boolean;\r\n  error: string | null;\r\n  selectedDataset: string | null;\r\n  showCheckpointModal: boolean;\r\n}\r\n\r\nconst initialState: NotebookState = {\r\n  loading: false,\r\n  error: null,\r\n  selectedDataset: null,\r\n  showCheckpointModal: false,\r\n};\r\n\r\nexport const performSelectDataset = createAsyncThunk(\r\n  'notebook/selectDataset',\r\n  async (selectedDataset: string, { rejectWithValue }) => {\r\n    try {\r\n      const results = await loadDataset(selectedDataset);\r\n      return { ...results, selectedDataset };\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const notebookSlice = createSlice({\r\n  name: 'notebook',\r\n  initialState,\r\n  reducers: {\r\n    selectDataset: (state: NotebookState, { payload }: PayloadAction<string>) => {\r\n      state.selectedDataset = payload;\r\n    },\r\n    toggleCheckpointModal: (state: NotebookState, { payload }: PayloadAction<boolean>) => {\r\n      state.showCheckpointModal = payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performSelectDataset.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performSelectDataset.fulfilled, (state, action) => {\r\n      const { selectedDataset } = action.payload;\r\n      state.selectedDataset = selectedDataset;\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performSelectDataset.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n\r\n    builder.addCase(performRunCell.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performRunCell.fulfilled, (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performRunCell.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n\r\n    builder.addCase(performRunAllCells.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performRunAllCells.fulfilled, (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performRunAllCells.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n\r\n    builder.addCase(performFetchCheckpoints.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performFetchCheckpoints.fulfilled, (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performFetchCheckpoints.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n\r\n    builder.addCase(performSaveCheckpoint.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performSaveCheckpoint.fulfilled, (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performSaveCheckpoint.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n\r\n    builder.addCase(performLoadCheckpoint.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performLoadCheckpoint.fulfilled, (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performLoadCheckpoint.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n  },\r\n});\r\n\r\nexport const { selectDataset, toggleCheckpointModal } = notebookSlice.actions;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { DataEntity } from '../entities';\r\nimport { performSelectDataset } from './notebook';\r\nimport { performRunAllCells, performRunCell } from './editor';\r\nimport { performLoadCheckpoint } from './checkpoint';\r\n\r\nexport type BrowserState = DataEntity;\r\n\r\nconst initialState: BrowserState = {\r\n  raw: '',\r\n  table: '',\r\n  console: '',\r\n};\r\n\r\nexport const browserSlice = createSlice({\r\n  name: 'browser',\r\n  initialState: initialState as BrowserState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performSelectDataset.fulfilled, (state, action) => {\r\n      const { raw, table, console } = action.payload;\r\n      return { raw, table, console };\r\n    });\r\n\r\n    builder.addCase(performRunCell.fulfilled, (state, action) => action.payload);\r\n\r\n    builder.addCase(performRunAllCells.fulfilled, (state, action) => action.payload);\r\n\r\n    builder.addCase(performLoadCheckpoint.fulfilled, (state, action) => action.payload.browserState);\r\n  },\r\n});\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { notebookSlice } from './slices/notebook';\r\nimport { editorSlice } from './slices/editor';\r\nimport { browserSlice } from './slices/browser';\r\nimport { checkpointSlice } from './slices/checkpoint';\r\n\r\nconst rootReducer = combineReducers({\r\n  notebook: notebookSlice.reducer,\r\n  browser: browserSlice.reducer,\r\n  editor: editorSlice.reducer,\r\n  checkpoint: checkpointSlice.reducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm, SubmitHandler, FieldValues } from 'react-hook-form';\r\n\r\nimport { AppState } from '../store';\r\nimport { performSelectDataset } from '../slices/notebook';\r\n\r\nfunction DatasetSelect(): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n  const loadError = useSelector<AppState, string | null>((state) => state.notebook.error);\r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n  const onSubmit: SubmitHandler<FieldValues> = (data) => {\r\n    dispatch(performSelectDataset(data.dataset));\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"flex flex-col items-center justify-center\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <label htmlFor=\"movies_incorrect\">\r\n        <input\r\n          {...register('dataset', { required: true })}\r\n          id=\"movies_incorrect\"\r\n          type=\"radio\"\r\n          value=\"movies_incorrect\"\r\n        />\r\n        <span className=\"ml-2 inline-block\">movies_incorrect</span>\r\n      </label>\r\n      <label htmlFor=\"nobel_prizes_incorrect\">\r\n        <input\r\n          {...register('dataset', { required: true })}\r\n          id=\"nobel_prizes_incorrect\"\r\n          type=\"radio\"\r\n          value=\"nobel_prizes_incorrect\"\r\n        />\r\n        <span className=\"ml-2 inline-block\">nobel_prizes_incorrect</span>\r\n      </label>\r\n      {errors.dataset && <span className=\"py-2 text-red-500\">Please choose a dataset</span>}\r\n      {loadError && <span className=\"py-2 text-red-500\">{loadError}</span>}\r\n      <button type=\"submit\" className=\"button-relief\">\r\n        Load\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default DatasetSelect;\r\n","import React, { useState, useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-json';\r\nimport 'ace-builds/src-noconflict/theme-monokai';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\n\r\nimport { AppState } from '../store';\r\n\r\nenum Mode {\r\n  Raw = 'RAW',\r\n  Table = 'TABLE',\r\n  Console = 'CONSOLE',\r\n}\r\n\r\nfunction DataBrowser(): React.ReactElement {\r\n  const loading = useSelector<AppState, boolean>((state) => state.notebook.loading);\r\n  const [browserMode, setBrowserMode] = useState(Mode.Raw);\r\n  const rawData = useSelector<AppState, string>((state) => (state.browser.raw));\r\n  const tableData = useSelector<AppState, string>((state) => (state.browser.table));\r\n  const consoleOutput = useSelector<AppState, string>((state) => (state.browser.console));\r\n\r\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    setBrowserMode(e.currentTarget.name as Mode);\r\n  };\r\n\r\n  const codeView = useMemo(() => (\r\n    <AceEditor\r\n      width=\"100%\"\r\n      mode=\"json\"\r\n      theme=\"monokai\"\r\n      readOnly\r\n      fontSize={16}\r\n      minLines={39}\r\n      maxLines={39}\r\n      showPrintMargin={false}\r\n      value={rawData}\r\n    />\r\n  ), [rawData]);\r\n\r\n  const tableView = useMemo(() => (\r\n    <div className=\"px-4 w-full h-80vh bg-gray-50 border border-gray-300 block rounded-md whitespace-nowrap overflow-scroll\">\r\n      <ReactMarkdown remarkPlugins={[gfm]}>\r\n        {tableData}\r\n      </ReactMarkdown>\r\n    </div>\r\n  ), [tableData]);\r\n\r\n  const consoleView = (\r\n    <div className=\"px-4 w-full h-80vh bg-gray-50 border border-gray-300 block rounded-md text-left overflow-scroll\">\r\n      <span className=\"font-mono\">{consoleOutput}</span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"px-4 max-w-4xl min-h-screen\">\r\n      <div className=\"py-2\">\r\n        <h1 className=\"font-bold text-3xl uppercase p-4\">Data Browser</h1>\r\n      </div>\r\n      <div className=\"flex flex-row justify-between w-full bg-gray-50 border border-gray-300 rounded-t-md\">\r\n        <div className=\"text-left\">\r\n          <button type=\"button\" name={Mode.Raw} onClick={handleClick} className={`py-2 px-4 inline-block font-semibold ${(browserMode === Mode.Raw) ? 'text-blue-600' : 'text-gray-400'}`}>Raw</button>\r\n          <button type=\"button\" name={Mode.Table} onClick={handleClick} className={`py-2 px-4 inline-block font-semibold ${(browserMode === Mode.Table) ? 'text-blue-600' : 'text-gray-400'}`}>Table</button>\r\n          <button type=\"button\" name={Mode.Console} onClick={handleClick} className={`py-2 px-4 inline-block font-semibold ${(browserMode === Mode.Console) ? 'text-blue-600' : 'text-gray-400'}`}>Console</button>\r\n        </div>\r\n        {loading && (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-700 m-2 outline-none animate-spin transform rotate-180\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n          </svg>\r\n        )}\r\n      </div>\r\n      {browserMode === Mode.Raw && codeView}\r\n      {browserMode === Mode.Table && tableView}\r\n      {browserMode === Mode.Console && consoleView}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataBrowser;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-python';\r\nimport 'ace-builds/src-noconflict/theme-chrome';\r\n\r\nimport { AppState } from '../../store';\r\nimport { changeCell, focusCell } from '../../slices/editor';\r\n\r\ninterface IProps {\r\n  id: number;\r\n}\r\n\r\nfunction Cell({ id }: IProps): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n  const execStatus = useSelector<AppState, string | number>((state) => (\r\n    state.editor.cells.find((c) => c.id === id)?.execStatus || ' '\r\n  ));\r\n  const errorStatus = useSelector<AppState, boolean>((state) => (\r\n    state.editor.cells.find((c) => c.id === id)?.errorStatus || false\r\n  ));\r\n  const editorContent = useSelector<AppState, string>((state) => (\r\n    state.editor.cells.find((c) => c.id === id)?.editorContent || ''\r\n  ));\r\n  const numOfLines = useSelector<AppState, number>((state) => (\r\n    state.editor.cells.find((c) => c.id === id)?.numOfLines || 0\r\n  ));\r\n  const lastExecutedCellId = useSelector<AppState, number | null>((state) => (\r\n    state.editor.lastExecutedCellId\r\n  ));\r\n  const updateBrowserCellId = useSelector<AppState, number | null>((state) => (\r\n    state.editor.updateBrowserCellId\r\n  ));\r\n\r\n  let leftBorder = '';\r\n  if (updateBrowserCellId && updateBrowserCellId === id) leftBorder = 'border-l-4 border-blue-500';\r\n  if (lastExecutedCellId && lastExecutedCellId === id) leftBorder = 'border-l-4 border-green-500';\r\n  if (errorStatus) leftBorder = 'border-l-4 border-red-500';\r\n\r\n  return (\r\n    <div className={`flex flex-col p-2 ${leftBorder} rounded shadow-md relative hover:shadow-lg overflow-hidden`}>\r\n      <div className=\"flex flex-row justify-between items-start\">\r\n        <span className=\"text-lg mr-4 min-w-max\">{`[${execStatus}]: `}</span>\r\n        <div style={{ width: '93%' }} className={`mt-2 ring-4 ring-gray-400 ${numOfLines <= 5 ? 'focus-within:ring-blue-500' : 'focus-within:ring-yellow-500'} relative`}>\r\n          <AceEditor\r\n            width=\"100%\"\r\n            mode=\"python\"\r\n            theme=\"chrome\"\r\n            showGutter={false}\r\n            fontSize={16}\r\n            minLines={1}\r\n            maxLines={15}\r\n            value={editorContent}\r\n            onFocus={() => dispatch(focusCell(id))}\r\n            onChange={(value: string) => dispatch(changeCell(value))}\r\n            wrapEnabled\r\n          />\r\n        </div>\r\n      </div>\r\n      {numOfLines > 5 && <span className=\"mt-2 text-yellow-500 text-right font-bold\">Recommended maximum number of lines is 5</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cell;\r\n","import React from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport { AppState } from '../../store';\r\nimport {\r\n  addCell,\r\n  deleteCell,\r\n  performRunAllCells,\r\n  performRunCell,\r\n  moveCell,\r\n} from '../../slices/editor';\r\nimport { performFetchCheckpoints, performSaveCheckpoint } from '../../slices/checkpoint';\r\nimport { toggleCheckpointModal } from '../../slices/notebook';\r\nimport Cell from './Cell';\r\n\r\nfunction CellsList(): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n  const cellIds = useSelector<AppState, number[]>((state) => state.editor.cells.map((cell) => cell.id), shallowEqual);\r\n\r\n  const handleLoadCheckpoint = () => {\r\n    dispatch(toggleCheckpointModal(true));\r\n    dispatch(performFetchCheckpoints());\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div className=\"py-2\">\r\n        <h1 className=\"font-bold text-3xl uppercase p-4\">Editor</h1>\r\n      </div>\r\n      <div className=\"px-4 max-w-4xl max-h-screen bg-gray-50 border border-gray-300 block rounded-md text-left\">\r\n        <div className=\"flex flex-row justify-between\">\r\n          <div className=\"flex flex-row\">\r\n            <svg onClick={() => dispatch(addCell())} data-tip=\"Add New Cell\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n            </svg>\r\n            <svg onClick={() => dispatch(deleteCell())} data-tip=\"Delete Cell\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-red-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n            </svg>\r\n            <svg onClick={() => dispatch(moveCell(-1))} data-tip=\"Move Cell Up\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 11l5-5m0 0l5 5m-5-5v12\" />\r\n            </svg>\r\n            <svg onClick={() => dispatch(moveCell(+1))} data-tip=\"Move Cell Down\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 13l-5 5m0 0l-5-5m5 5V6\" />\r\n            </svg>\r\n            <svg onClick={() => dispatch(performRunCell())} data-tip=\"Run Cell\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n            </svg>\r\n            <svg onClick={() => dispatch(performRunAllCells())} data-tip=\"Run All Cells\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\r\n            </svg>\r\n          </div>\r\n          <div className=\"flex flex-row\">\r\n            <svg onClick={() => dispatch(performSaveCheckpoint())} xmlns=\"http://www.w3.org/2000/svg\" data-tip=\"Save Checkpoint\" data-for=\"topButtons\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\r\n            </svg>\r\n            <svg onClick={handleLoadCheckpoint} xmlns=\"http://www.w3.org/2000/svg\" data-tip=\"Load Checkpoint\" data-for=\"topButtons\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\" />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"px-4 max-w-4xl h-80vh bg-gray-50 border border-gray-300 block rounded-md text-left overflow-y-scroll\">\r\n        <div className=\"flex flex-col m-2 gap-4\">\r\n          {cellIds.map((id) => <Cell key={id} id={id} />)}\r\n        </div>\r\n      </div>\r\n      <ReactTooltip id=\"topButtons\" place=\"top\" effect=\"solid\" />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CellsList;\r\n","import React, { SetStateAction } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppState } from '../../store';\r\nimport { CheckpointDetailEntity } from '../../entities';\r\n\r\ninterface IProps {\r\n    id: string;\r\n    selectedId: string | null;\r\n    setSelectedId: React.Dispatch<SetStateAction<string | null>>;\r\n}\r\n\r\nfunction Checkpoint({ id, selectedId, setSelectedId }: IProps): React.ReactElement {\r\n  const checkpoint = useSelector<AppState, CheckpointDetailEntity | undefined>((state) => (\r\n    state.checkpoint.find((c) => c.id === id)\r\n  ));\r\n\r\n  return (\r\n    <li onClick={() => setSelectedId(id)} className={`p-4 hover:bg-gray-100 cursor-pointer text-center ${selectedId === id && 'bg-gray-100'}`} role=\"presentation\">\r\n      {checkpoint?.timestamp}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Checkpoint;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { AppState } from '../../store';\r\nimport { performLoadCheckpoint } from '../../slices/checkpoint';\r\nimport { toggleCheckpointModal } from '../../slices/notebook';\r\nimport Checkpoint from './Checkpoint';\r\n\r\nfunction CheckpointsList(): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector<AppState, boolean>((state) => state.notebook.loading);\r\n  const ids = useSelector<AppState, string[]>((state) => (\r\n    state.checkpoint.map((checkpointDetail) => checkpointDetail.id)\r\n  ));\r\n  const [selectedId, setSelectedId] = useState<string | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleLoadCheckpoint = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedId) {\r\n      setError('Invalid selection!');\r\n      return;\r\n    }\r\n    dispatch(performLoadCheckpoint(selectedId));\r\n    dispatch(toggleCheckpointModal(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-400 h-screen w-screen flex justify-center items-center\">\r\n      <div className=\"mb-24 bg-white rounded shadow-lg w-2/12\">\r\n        <div className=\"border-b px-4 py-2 flex justify-between items-center\">\r\n          <h3 className=\"font-semibold text-lg uppercase\">Load checkpoint</h3>\r\n          <svg onClick={() => dispatch(toggleCheckpointModal(false))} xmlns=\"http://www.w3.org/2000/svg\" className=\"button-icon hover:text-red-700\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n          </svg>\r\n        </div>\r\n        <div className=\"flex flex-col justify-center\">\r\n          {ids.length > 0\r\n            ? (\r\n              <ul className=\"divide-y divide-gray-300\">\r\n                {ids.map((id) => <Checkpoint key={id} id={id} selectedId={selectedId} setSelectedId={setSelectedId} />)}\r\n              </ul>\r\n            )\r\n            : <span className=\"m-4\">{loading ? 'Loading...' : 'No checkpoint has been created'}</span>}\r\n        </div>\r\n        <div className=\"flex justify-end items-center w-100 border-t px-2\">\r\n          {error && <span className=\"px-4 py-2 text-red-500\">{error}</span>}\r\n          <button onClick={handleLoadCheckpoint} type=\"submit\" className=\"button bg-blue-600 hover:bg-blue-700\">Load</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckpointsList;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppState } from '../store';\r\nimport DatasetSelect from '../components/DatasetSelect';\r\nimport DataBrowser from '../components/DataBrowser';\r\nimport CellsList from '../components/editor/CellsList';\r\nimport CheckpointsList from '../components/checkpoint/CheckpointsList';\r\n\r\nfunction HomeView(): React.ReactElement {\r\n  const showCheckpointModal = useSelector<AppState, boolean>((state) => state.notebook.showCheckpointModal);\r\n\r\n  return (\r\n    <div className=\"h-full w-screen flex flex-col justify-center\">\r\n      <nav className=\"flex flex-row items-center px-8 py-1 bg-blue-600 border-b-8 border-blue-200\">\r\n        <div className=\"flex flex-row items-center text-white\">\r\n          <a href=\"index\" className=\"no-underline py-2 hover:text-gray-300\"><h1 className=\"font-bold text-3xl\">Data Jupyter</h1></a>\r\n        </div>\r\n      </nav>\r\n      {showCheckpointModal ? <CheckpointsList /> : (\r\n        <div className=\"bg-gray-100\">\r\n          <main className=\"h-full container mx-auto px-4 py-4 text-center\">\r\n            <div className=\"pt-16\">\r\n              <h1 className=\"font-bold text-3xl uppercase p-4\">Choose a demo dataset</h1>\r\n              <DatasetSelect />\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-6 py-4\">\r\n              <CellsList />\r\n              <DataBrowser />\r\n            </div>\r\n          </main>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeView;\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store';\nimport HomeView from './views/HomeView';\n\nfunction App(): React.ReactElement {\n  return (\n    <Provider store={store}>\n      <HomeView />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}