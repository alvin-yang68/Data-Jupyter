{"version":3,"sources":["api/index.tsx","api/dataset.tsx","slices/editor.tsx","slices/notebook.tsx","store.tsx","components/DatasetSelect.tsx","components/DataBrowser.tsx","components/editor/Cell.tsx","components/editor/CellsList.tsx","views/MainView.tsx","App.tsx","index.tsx"],"names":["client","axios","create","validateStatus","status","loadDataset","selectedDataset","a","post","response","data","updateBrowser","editorContent","editorSlice","createSlice","name","initialState","cells","cellCounter","execCounter","focusedCellId","reducers","focusCell","state","payload","addCell","newCell","id","execStatus","focusedCellIdx","findIndex","cell","splice","push","changeCell","index","setCellStatus","deleteCell","moveCell","from","to","Math","min","max","length","actions","performRunCell","createAsyncThunk","_","getState","dispatch","rejectWithValue","editor","targetCell","find","results","performRunAllCells","performSelectDataset","notebookSlice","loading","error","selectDataset","extraReducers","builder","addCase","pending","fulfilled","action","rejected","message","rootReducer","combineReducers","notebook","reducer","store","configureStore","DatasetSelect","Mode","useDispatch","loadError","useSelector","useForm","register","handleSubmit","errors","formState","className","onSubmit","dataset","htmlFor","required","type","value","DataBrowser","useState","Raw","browserMode","setBrowserMode","rawData","raw","tableData","table","consoleOutput","console","handleClick","e","preventDefault","currentTarget","codeView","useMemo","width","mode","theme","readOnly","fontSize","minLines","maxLines","showPrintMargin","tableView","remarkPlugins","gfm","consoleView","onClick","Table","Console","Cell","c","style","showGutter","onFocus","onChange","wrapEnabled","CellsList","cellIds","map","shallowEqual","data-tip","data-for","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","place","effect","MainView","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84efae3c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst client = axios.create({\r\n  validateStatus: (status) => status < 300,\r\n});\r\n\r\nexport default client;\r\n","import client from './index';\r\nimport { DataEntity } from '../entities';\r\n\r\nexport async function loadDataset(selectedDataset: string): Promise<DataEntity> {\r\n  const response = await client.post('/api/v1/load', { selectedDataset });\r\n  return response.data;\r\n}\r\n\r\nexport async function updateBrowser(editorContent: string): Promise<DataEntity> {\r\n  const response = await client.post('/api/v1/update', { editorContent });\r\n  return response.data;\r\n}\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { updateBrowser } from '../api/dataset';\r\nimport { CellEntity, DataEntity } from '../entities';\r\n\r\nexport type EditorState = {\r\n  cells: CellEntity[];\r\n  cellCounter: number;\r\n  execCounter: number;\r\n  focusedCellId: number | null;\r\n}\r\n\r\nconst initialState: EditorState = {\r\n  cells: [],\r\n  cellCounter: 0,\r\n  execCounter: 0,\r\n  focusedCellId: null,\r\n};\r\n\r\nexport const editorSlice = createSlice({\r\n  name: 'editor',\r\n  initialState,\r\n  reducers: {\r\n    focusCell: (state: EditorState, { payload }: PayloadAction<number | undefined>) => {\r\n      if (payload) {\r\n        state.focusedCellId = payload;\r\n      } else {\r\n        state.focusedCellId = null;\r\n      }\r\n    },\r\n    addCell: (state: EditorState) => {\r\n      state.cellCounter += 1;\r\n      const newCell = { id: state.cellCounter, execStatus: '', editorContent: '' };\r\n      if (state.focusedCellId) {\r\n        const focusedCellIdx = state.cells.findIndex((cell) => cell.id === state.focusedCellId);\r\n        if (focusedCellIdx > -1) state.cells.splice(focusedCellIdx + 1, 0, newCell);\r\n      } else {\r\n        state.cells.push(newCell);\r\n      }\r\n    },\r\n    changeCell: (state: EditorState, { payload }: PayloadAction<string>) => {\r\n      const index = state.cells.findIndex((cell) => cell.id === state.focusedCellId);\r\n      if (index > -1) state.cells[index].editorContent = payload;\r\n    },\r\n    setCellStatus: (state: EditorState, { payload }: PayloadAction<{id: number, execStatus?: string }>) => {\r\n      let execStatus: (string | number);\r\n      if (payload.execStatus) {\r\n        execStatus = payload.execStatus;\r\n      } else {\r\n        state.execCounter += 1;\r\n        execStatus = state.execCounter;\r\n      }\r\n      const index = state.cells.findIndex((cell) => cell.id === payload.id);\r\n      if (index > -1) state.cells[index].execStatus = execStatus;\r\n    },\r\n    deleteCell: (state: EditorState) => {\r\n      const index = state.cells.findIndex((cell) => cell.id === state.focusedCellId);\r\n      if (index > -1) state.cells.splice(index, 1);\r\n    },\r\n    moveCell: (state: EditorState, { payload }: PayloadAction<number>) => {\r\n      const from = state.cells.findIndex((cell) => cell.id === state.focusedCellId);\r\n      const to = Math.min(Math.max(from + payload, 0), state.cells.length - 1);\r\n      if (from > -1) state.cells.splice(to, 0, state.cells.splice(from, 1)[0]);\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  focusCell,\r\n  addCell,\r\n  changeCell,\r\n  setCellStatus,\r\n  deleteCell,\r\n  moveCell,\r\n} = editorSlice.actions;\r\n\r\nexport const performRunCell = createAsyncThunk(\r\n  'editor/runCell',\r\n  async (_, { getState, dispatch, rejectWithValue }) => {\r\n    const { editor } = getState() as {editor: EditorState};\r\n\r\n    const targetCell = editor.cells.find((cell) => cell.id === editor.focusedCellId);\r\n    if (!targetCell) return rejectWithValue('Rejected');\r\n\r\n    try {\r\n      dispatch(setCellStatus({ id: targetCell.id, execStatus: '*' }));\r\n      const results = await updateBrowser(targetCell.editorContent);\r\n      dispatch(setCellStatus({ id: targetCell.id }));\r\n      return results;\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const performRunAllCells = createAsyncThunk(\r\n  'editor/runAllCells',\r\n  async (_, { dispatch, getState, rejectWithValue }) => {\r\n    const { editor } = getState() as {editor: EditorState};\r\n\r\n    try {\r\n      let results: DataEntity | undefined;\r\n      for (const cell of editor.cells) {\r\n        dispatch(setCellStatus({ id: cell.id, execStatus: '*' }));\r\n        results = await updateBrowser(cell.editorContent);\r\n        dispatch(setCellStatus({ id: cell.id }));\r\n      }\r\n      return results;\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { DataEntity } from '../entities';\r\nimport { loadDataset } from '../api/dataset';\r\nimport { performRunCell, performRunAllCells } from './editor';\r\n\r\nexport type NotebookState = {\r\n  loading: boolean;\r\n  error: string | null;\r\n  selectedDataset: string | null;\r\n  results: DataEntity | null;\r\n}\r\n\r\nconst initialState: NotebookState = {\r\n  loading: false,\r\n  error: null,\r\n  selectedDataset: null,\r\n  results: null,\r\n};\r\n\r\nexport const performSelectDataset = createAsyncThunk(\r\n  'notebook/selectDataset',\r\n  async (selectedDataset: string, { rejectWithValue }) => {\r\n    try {\r\n      const results = await loadDataset(selectedDataset);\r\n      return { ...results, selectedDataset };\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const notebookSlice = createSlice({\r\n  name: 'notebook',\r\n  initialState,\r\n  reducers: {\r\n    selectDataset: (state: NotebookState, { payload }: PayloadAction<string>) => {\r\n      state.selectedDataset = payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performSelectDataset.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performSelectDataset.fulfilled, (state, action) => {\r\n      const { selectedDataset, ...results } = action.payload;\r\n      state.selectedDataset = selectedDataset;\r\n      state.results = results;\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performSelectDataset.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n\r\n    builder.addCase(performRunCell.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performRunCell.fulfilled, (state, action) => {\r\n      state.results = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performRunCell.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n\r\n    builder.addCase(performRunAllCells.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performRunAllCells.fulfilled, (state, action) => {\r\n      if (action.payload) state.results = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performRunAllCells.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n  },\r\n});\r\n\r\nexport const { selectDataset } = notebookSlice.actions;\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { notebookSlice } from './slices/notebook';\r\nimport { editorSlice } from './slices/editor';\r\n\r\nconst rootReducer = combineReducers({\r\n  notebook: notebookSlice.reducer,\r\n  editor: editorSlice.reducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm, SubmitHandler, FieldValues } from 'react-hook-form';\r\n\r\nimport { AppState } from '../store';\r\nimport { performSelectDataset } from '../slices/notebook';\r\n\r\nfunction DatasetSelect(): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n  const loadError = useSelector<AppState, string | null>((state) => state.notebook.error);\r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n  const onSubmit: SubmitHandler<FieldValues> = (data) => {\r\n    dispatch(performSelectDataset(data.dataset));\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"flex flex-col items-center justify-center\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <label htmlFor=\"movies_incorrect\">\r\n        <input\r\n          {...register('dataset', { required: true })}\r\n          id=\"movies_incorrect\"\r\n          type=\"radio\"\r\n          value=\"movies_incorrect\"\r\n        />\r\n        <span className=\"ml-2 inline-block\">movies_incorrect</span>\r\n      </label>\r\n      <label htmlFor=\"nobel_prizes_incorrect\">\r\n        <input\r\n          {...register('dataset', { required: true })}\r\n          id=\"nobel_prizes_incorrect\"\r\n          type=\"radio\"\r\n          value=\"nobel_prizes_incorrect\"\r\n        />\r\n        <span className=\"ml-2 inline-block\">nobel_prizes_incorrect</span>\r\n      </label>\r\n      {errors.dataset && <span className=\"py-2 text-red-500\">Please choose a dataset</span>}\r\n      {loadError && <span className=\"py-2 text-red-500\">{loadError}</span>}\r\n      <button type=\"submit\" className=\"button-relief\">\r\n        Load\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default DatasetSelect;\r\n","import React, { useState, useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-json';\r\nimport 'ace-builds/src-noconflict/theme-monokai';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\n\r\nimport { AppState } from '../store';\r\n\r\nenum Mode {\r\n  Raw = 'RAW',\r\n  Table = 'TABLE',\r\n  Console = 'CONSOLE',\r\n}\r\n\r\nfunction DataBrowser(): React.ReactElement {\r\n  const [browserMode, setBrowserMode] = useState(Mode.Raw);\r\n  const rawData = useSelector<AppState, string>((state) => (\r\n    state.notebook.results\r\n      ? state.notebook.results.raw\r\n      : ''\r\n  ));\r\n  const tableData = useSelector<AppState, string>((state) => (\r\n    state.notebook.results\r\n      ? state.notebook.results.table\r\n      : ''\r\n  ));\r\n  const consoleOutput = useSelector<AppState, string>((state) => (\r\n    state.notebook.results\r\n      ? state.notebook.results.console\r\n      : ''\r\n  ));\r\n\r\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    setBrowserMode(e.currentTarget.name as Mode);\r\n  };\r\n\r\n  const codeView = useMemo(() => (\r\n    <AceEditor\r\n      width=\"100%\"\r\n      mode=\"json\"\r\n      theme=\"monokai\"\r\n      readOnly\r\n      fontSize={16}\r\n      minLines={39}\r\n      maxLines={39}\r\n      showPrintMargin={false}\r\n      value={rawData}\r\n    />\r\n  ), [rawData]);\r\n\r\n  const tableView = useMemo(() => (\r\n    <div className=\"px-4 w-full h-80vh bg-gray-50 border border-gray-300 block rounded-md whitespace-nowrap overflow-scroll\">\r\n      <ReactMarkdown remarkPlugins={[gfm]}>\r\n        {tableData}\r\n      </ReactMarkdown>\r\n    </div>\r\n  ), [tableData]);\r\n\r\n  const consoleView = (\r\n    <div className=\"px-4 w-full h-80vh bg-gray-50 border border-gray-300 block rounded-md text-left overflow-scroll\">\r\n      <span className=\"font-mono\">{consoleOutput}</span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"px-4 max-w-4xl min-h-screen\">\r\n      <div className=\"py-2\">\r\n        <h1 className=\"font-bold text-3xl uppercase p-4\">Data Browser</h1>\r\n      </div>\r\n      <div className=\"bg-gray-50 border border-gray-300 rounded-t-md text-left\">\r\n        <button type=\"button\" name={Mode.Raw} onClick={handleClick} className={`py-2 px-4 inline-block font-semibold ${(browserMode === Mode.Raw) ? 'text-blue-600' : 'text-gray-400'}`}>Raw</button>\r\n        <button type=\"button\" name={Mode.Table} onClick={handleClick} className={`py-2 px-4 inline-block font-semibold ${(browserMode === Mode.Table) ? 'text-blue-600' : 'text-gray-400'}`}>Table</button>\r\n        <button type=\"button\" name={Mode.Console} onClick={handleClick} className={`py-2 px-4 inline-block font-semibold ${(browserMode === Mode.Console) ? 'text-blue-600' : 'text-gray-400'}`}>Console</button>\r\n      </div>\r\n      {browserMode === Mode.Raw && codeView}\r\n      {browserMode === Mode.Table && tableView}\r\n      {browserMode === Mode.Console && consoleView}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataBrowser;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-python';\r\nimport 'ace-builds/src-noconflict/theme-chrome';\r\n\r\nimport { AppState } from '../../store';\r\nimport { changeCell, focusCell } from '../../slices/editor';\r\nimport { CellEntity } from '../../entities';\r\n\r\ninterface IProps {\r\n  id: number;\r\n}\r\n\r\nfunction Cell({ id }: IProps): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n  const cell = useSelector<AppState, CellEntity | undefined>((state) => (\r\n    state.editor.cells.find((c) => c.id === id)));\r\n\r\n  return (\r\n    <div className=\"flex flex-row justify-between items-start p-2 rounded overflow-hidden shadow-md relative hover:shadow-lg\">\r\n      <span className=\"italic text-lg mr-4 min-w-max\">{`[${cell?.execStatus ? cell.execStatus : ' '}]: `}</span>\r\n      <div style={{ width: '93%' }} className=\"mt-2 ring-4 ring-gray-400 focus-within:ring-blue-500 relative\">\r\n        <AceEditor\r\n          width=\"100%\"\r\n          mode=\"python\"\r\n          theme=\"chrome\"\r\n          showGutter={false}\r\n          fontSize={16}\r\n          minLines={1}\r\n          maxLines={100}\r\n          onFocus={() => dispatch(focusCell(cell?.id))}\r\n          onChange={(value: string) => dispatch(changeCell(value))}\r\n          wrapEnabled\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cell;\r\n","import React from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport { AppState } from '../../store';\r\nimport {\r\n  addCell,\r\n  deleteCell,\r\n  performRunAllCells,\r\n  performRunCell,\r\n  moveCell,\r\n} from '../../slices/editor';\r\nimport Cell from './Cell';\r\n\r\nfunction CellsList(): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector<AppState, boolean>((state) => state.notebook.loading);\r\n  const cellIds = useSelector<AppState, number[]>((state) => state.editor.cells.map((cell) => cell.id), shallowEqual);\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div className=\"py-2\">\r\n        <h1 className=\"font-bold text-3xl uppercase p-4\">Editor</h1>\r\n      </div>\r\n      <div className=\"px-4 max-w-4xl max-h-screen bg-gray-50 border border-gray-300 block rounded-md text-left\">\r\n        <div className=\"flex flex-row justify-between\">\r\n          <div className=\"flex flex-row\">\r\n            <svg onClick={() => dispatch(addCell())} data-tip=\"Add New\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n            </svg>\r\n            <svg onClick={() => dispatch(moveCell(-1))} data-tip=\"Move Up\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 11l5-5m0 0l5 5m-5-5v12\" />\r\n            </svg>\r\n            <svg onClick={() => dispatch(moveCell(+1))} data-tip=\"Move Down\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 13l-5 5m0 0l-5-5m5 5V6\" />\r\n            </svg>\r\n            <svg onClick={() => dispatch(performRunCell())} data-tip=\"Run Selected\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n            </svg>\r\n            <svg onClick={() => dispatch(performRunAllCells())} data-tip=\"Run All\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\r\n            </svg>\r\n            <svg onClick={() => dispatch(deleteCell())} data-tip=\"Delete Selected\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-red-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n            </svg>\r\n          </div>\r\n          {loading && (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-700 m-2 outline-none animate-spin transform rotate-180\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n          </svg>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"px-4 max-w-4xl h-80vh bg-gray-50 border border-gray-300 block rounded-md text-left overflow-y-scroll\">\r\n        <div className=\"flex flex-col m-2 gap-4\">\r\n          {cellIds.map((id) => <Cell key={id} id={id} />)}\r\n        </div>\r\n      </div>\r\n      <ReactTooltip id=\"topButtons\" place=\"top\" effect=\"solid\" />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CellsList;\r\n","import React from 'react';\r\n\r\nimport DatasetSelect from '../components/DatasetSelect';\r\nimport DataBrowser from '../components/DataBrowser';\r\nimport CellsList from '../components/editor/CellsList';\r\n\r\nfunction MainView(): React.ReactElement {\r\n  return (\r\n    <div className=\"w-screen flex flex-col justify-center\">\r\n      <nav className=\"flex flex-row items-center px-8 py-1 bg-blue-600 border-b-8 border-blue-200\">\r\n        <div className=\"flex flex-row items-center text-white\">\r\n          <a href=\"index\" className=\"no-underline py-2 hover:text-gray-300\"><h1 className=\"font-bold text-3xl\">Data Jupyter</h1></a>\r\n        </div>\r\n      </nav>\r\n      <main className=\"container mx-auto px-4 py-4 h-screen text-center\">\r\n        <div className=\"pt-16\">\r\n          <h1 className=\"font-bold text-3xl uppercase p-4\">Choose a dataset</h1>\r\n          <DatasetSelect />\r\n        </div>\r\n        <div className=\"grid grid-cols-2 gap-6 py-4\">\r\n          <CellsList />\r\n          <DataBrowser />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainView;\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store';\nimport MainView from './views/MainView';\n\nfunction App(): React.ReactElement {\n  return (\n    <Provider store={store}>\n      <MainView />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}