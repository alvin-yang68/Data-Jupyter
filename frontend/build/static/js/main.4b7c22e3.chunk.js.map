{"version":3,"sources":["api/index.tsx","api/browser.tsx","api/checkpoint.tsx","slices/checkpoint.tsx","slices/editor.tsx","slices/notebook.tsx","slices/browser.tsx","store.tsx","components/DatasetSelection.tsx","components/DataBrowser.tsx","components/editor/Cell.tsx","components/editor/CellsList.tsx","components/checkpoint/Checkpoint.tsx","components/checkpoint/CheckpointsList.tsx","views/HomeView.tsx","App.tsx","index.tsx"],"names":["client","axios","create","validateStatus","status","updateBrowser","payload","a","post","response","data","fetchCheckpoints","get","saveCheckpoint","timestamp","Date","toLocaleString","loadCheckpoint","id","performFetchCheckpoints","createAsyncThunk","_","rejectWithValue","performSaveCheckpoint","getState","editor","notebook","browser","selectedDataset","editorState","browserState","performLoadCheckpoint","checkpointSlice","createSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","editorSlice","cells","cellCounter","execCounter","focusedCellId","lastExecutedCellId","updateBrowserCellId","focusCell","addCell","newCell","execStatus","errorStatus","editorContent","numOfLines","focusedCellIdx","findIndex","cell","splice","push","changeCell","index","split","length","setCellStatus","deleteCell","moveCell","from","to","Math","min","max","loadCells","setLastExecutedCellId","setBrowserUpdateCellId","actions","performRunCell","dispatch","targetCell","find","hasCellError","shouldUpdateBrowser","results","performRunAllCells","rest","notebookSlice","loading","error","showCheckpointModal","selectDataset","toggleCheckpointModal","pending","rejected","message","browserSlice","raw","table","console","rootReducer","combineReducers","reducer","checkpoint","store","configureStore","demoDatasets","DatasetSelection","Mode","useDispatch","useSelector","useForm","register","handleSubmit","errors","formState","className","onSubmit","dataset","map","htmlFor","required","type","value","radioField","DataBrowser","useState","Raw","browserMode","setBrowserMode","rawData","tableData","consoleOutput","handleClick","e","preventDefault","currentTarget","codeView","useMemo","width","mode","theme","readOnly","fontSize","minLines","maxLines","showPrintMargin","tableView","remarkPlugins","gfm","consoleView","onClick","Table","Console","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Cell","c","hasError","leftBorder","style","showGutter","onFocus","onChange","wrapEnabled","CellsList","cellIds","shallowEqual","data-tip","data-for","place","effect","Checkpoint","selectedId","setSelectedId","role","CheckpointsList","ids","checkpointDetail","setError","HomeView","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b7c22e3.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst client = axios.create({\r\n  validateStatus: (status) => status < 300,\r\n});\r\n\r\nexport default client;\r\n","import client from './index';\r\nimport { CellExecutionResult } from '../entities';\r\n\r\ntype UpdateBrowserPayload = {\r\n  selectedDataset: string;\r\n  editorContent: string;\r\n}\r\n\r\nexport async function updateBrowser(payload: UpdateBrowserPayload): Promise<CellExecutionResult> {\r\n  const response = await client.post('/api/run', payload);\r\n  return response.data;\r\n}\r\n","import client from './index';\r\n\r\nimport { Checkpoint, CheckpointDetail } from '../entities';\r\n\r\nexport async function fetchCheckpoints(): Promise<CheckpointDetail[]> {\r\n  const response = await client.get('/api/checkpoint');\r\n  return response.data;\r\n}\r\n\r\nexport async function saveCheckpoint(payload: Checkpoint): Promise<void> {\r\n  const timestamp = new Date().toLocaleString();\r\n  const response = await client.post('/api/checkpoint', { ...payload, timestamp });\r\n  return response.data;\r\n}\r\n\r\nexport async function loadCheckpoint(id: string): Promise<Checkpoint> {\r\n  const response = await client.get(`/api/checkpoint/${id}`);\r\n  return response.data;\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { fetchCheckpoints, loadCheckpoint, saveCheckpoint } from '../api/checkpoint';\r\nimport { CheckpointDetail } from '../entities';\r\nimport { BrowserState } from './browser';\r\nimport { EditorState } from './editor';\r\nimport { NotebookState } from './notebook';\r\n\r\nexport type CheckpointState = CheckpointDetail[];\r\n\r\nconst initialState: CheckpointState = [];\r\n\r\nexport const performFetchCheckpoints = createAsyncThunk(\r\n  'checkpoint/fetch',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      return await fetchCheckpoints();\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const performSaveCheckpoint = createAsyncThunk(\r\n  'checkpoint/save',\r\n  async (_, { getState, rejectWithValue }) => {\r\n    const { editor, notebook, browser } = getState() as {editor: EditorState, notebook: NotebookState, browser: BrowserState};\r\n\r\n    if (!notebook.selectedDataset || browser === null) { return rejectWithValue('Rejected'); }\r\n\r\n    try {\r\n      return await saveCheckpoint({\r\n        editorState: editor,\r\n        browserState: browser,\r\n        selectedDataset: notebook.selectedDataset,\r\n      });\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const performLoadCheckpoint = createAsyncThunk(\r\n  'checkpoint/load',\r\n  async (id: string, { rejectWithValue }) => {\r\n    try {\r\n      return await loadCheckpoint(id);\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const checkpointSlice = createSlice({\r\n  name: 'checkpoint',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performFetchCheckpoints.fulfilled, (state, action) => action.payload);\r\n  },\r\n});\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { updateBrowser } from '../api/browser';\r\nimport { Cell } from '../entities';\r\nimport { performLoadCheckpoint } from './checkpoint';\r\nimport { NotebookState } from './notebook';\r\n\r\nexport type EditorState = {\r\n  cells: Cell[];\r\n  cellCounter: number;\r\n  execCounter: number;\r\n  focusedCellId: number | null;\r\n  lastExecutedCellId: number | null;\r\n  updateBrowserCellId: number | null;\r\n}\r\n\r\nconst initialState: EditorState = {\r\n  cells: [],\r\n  cellCounter: 0,\r\n  execCounter: 0,\r\n  focusedCellId: null,\r\n  lastExecutedCellId: null,\r\n  updateBrowserCellId: null,\r\n};\r\n\r\nexport const editorSlice = createSlice({\r\n  name: 'editor',\r\n  initialState,\r\n  reducers: {\r\n    focusCell: (state: EditorState, { payload }: PayloadAction<number | undefined>) => {\r\n      if (payload) {\r\n        state.focusedCellId = payload;\r\n      } else {\r\n        state.focusedCellId = null;\r\n      }\r\n    },\r\n    addCell: (state: EditorState) => {\r\n      state.cellCounter += 1;\r\n      const newCell = {\r\n        id: state.cellCounter,\r\n        execStatus: '',\r\n        errorStatus: false,\r\n        editorContent: '',\r\n        numOfLines: 0,\r\n      };\r\n      if (state.focusedCellId) {\r\n        const focusedCellIdx = state.cells.findIndex((cell) => cell.id === state.focusedCellId);\r\n        if (focusedCellIdx > -1) state.cells.splice(focusedCellIdx + 1, 0, newCell);\r\n      } else {\r\n        state.cells.push(newCell);\r\n      }\r\n    },\r\n    changeCell: (state: EditorState, { payload }: PayloadAction<string>) => {\r\n      const index = state.cells.findIndex((cell) => cell.id === state.focusedCellId);\r\n      if (index > -1) {\r\n        state.cells[index].numOfLines = payload.split('\\n').length;\r\n        state.cells[index].editorContent = payload;\r\n      }\r\n    },\r\n    setCellStatus: (state: EditorState, { payload }: PayloadAction<{id: number, execStatus?: string, errorStatus: boolean }>) => {\r\n      let execStatus: (string | number);\r\n      if (payload.execStatus) {\r\n        execStatus = payload.execStatus;\r\n      } else {\r\n        state.execCounter += 1;\r\n        execStatus = state.execCounter;\r\n      }\r\n      const index = state.cells.findIndex((cell) => cell.id === payload.id);\r\n      if (index > -1) {\r\n        state.cells[index].execStatus = execStatus;\r\n        state.cells[index].errorStatus = payload.errorStatus;\r\n      }\r\n    },\r\n    deleteCell: (state: EditorState) => {\r\n      const index = state.cells.findIndex((cell) => cell.id === state.focusedCellId);\r\n      if (index > -1) state.cells.splice(index, 1);\r\n    },\r\n    moveCell: (state: EditorState, { payload }: PayloadAction<number>) => {\r\n      const from = state.cells.findIndex((cell) => cell.id === state.focusedCellId);\r\n      const to = Math.min(Math.max(from + payload, 0), state.cells.length - 1);\r\n      if (from > -1) state.cells.splice(to, 0, state.cells.splice(from, 1)[0]);\r\n    },\r\n    loadCells: (state: EditorState, { payload }: PayloadAction<Cell[]>) => {\r\n      state.cells = payload;\r\n    },\r\n    setLastExecutedCellId: (state: EditorState, { payload }: PayloadAction<number>) => {\r\n      state.lastExecutedCellId = payload;\r\n    },\r\n    setBrowserUpdateCellId: (state: EditorState, { payload }: PayloadAction<number>) => {\r\n      state.updateBrowserCellId = payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performLoadCheckpoint.fulfilled, (state, action) => action.payload.editorState);\r\n  },\r\n});\r\n\r\nexport const {\r\n  focusCell,\r\n  addCell,\r\n  changeCell,\r\n  setCellStatus,\r\n  deleteCell,\r\n  moveCell,\r\n  loadCells,\r\n  setLastExecutedCellId,\r\n  setBrowserUpdateCellId,\r\n} = editorSlice.actions;\r\n\r\nexport const performRunCell = createAsyncThunk(\r\n  'editor/runCell',\r\n  async (_, { getState, dispatch, rejectWithValue }) => {\r\n    const { notebook, editor } = getState() as {notebook: NotebookState, editor: EditorState};\r\n\r\n    const targetCell = editor.cells.find((cell) => cell.id === editor.focusedCellId);\r\n    if (!targetCell || !notebook.selectedDataset) return rejectWithValue('Rejected');\r\n\r\n    try {\r\n      dispatch(setCellStatus({ id: targetCell.id, execStatus: '*', errorStatus: false }));\r\n      const { hasCellError, shouldUpdateBrowser, ...results } = await updateBrowser({\r\n        selectedDataset: notebook.selectedDataset,\r\n        editorContent: targetCell.editorContent,\r\n      });\r\n      dispatch(setCellStatus({ id: targetCell.id, errorStatus: hasCellError }));\r\n      dispatch(setLastExecutedCellId(targetCell.id));\r\n      if (shouldUpdateBrowser) dispatch(setBrowserUpdateCellId(targetCell.id));\r\n      return results;\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const performRunAllCells = createAsyncThunk(\r\n  'editor/runAllCells',\r\n  async (_, { dispatch, getState, rejectWithValue }) => {\r\n    const { notebook, editor } = getState() as {notebook: NotebookState, editor: EditorState};\r\n\r\n    if (!notebook.selectedDataset) return rejectWithValue('Rejected');\r\n\r\n    try {\r\n      let results;\r\n      for (const targetCell of editor.cells) {\r\n        dispatch(setCellStatus({ id: targetCell.id, execStatus: '*', errorStatus: false }));\r\n        const { hasCellError, shouldUpdateBrowser, ...rest } = await updateBrowser({\r\n          selectedDataset: notebook.selectedDataset,\r\n          editorContent: targetCell.editorContent,\r\n        });\r\n        results = rest;\r\n        dispatch(setCellStatus({ id: targetCell.id, errorStatus: hasCellError }));\r\n        dispatch(setLastExecutedCellId(targetCell.id));\r\n        if (shouldUpdateBrowser) dispatch(setBrowserUpdateCellId(targetCell.id));\r\n      }\r\n      return results;\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data);\r\n    }\r\n  },\r\n);\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { performRunCell, performRunAllCells } from './editor';\r\nimport { performFetchCheckpoints, performLoadCheckpoint, performSaveCheckpoint } from './checkpoint';\r\n\r\nexport type NotebookState = {\r\n  loading: boolean;\r\n  error: string | null;\r\n  selectedDataset: string | null;\r\n  showCheckpointModal: boolean;\r\n}\r\n\r\nconst initialState: NotebookState = {\r\n  loading: false,\r\n  error: null,\r\n  selectedDataset: null,\r\n  showCheckpointModal: false,\r\n};\r\n\r\nexport const notebookSlice = createSlice({\r\n  name: 'notebook',\r\n  initialState,\r\n  reducers: {\r\n    selectDataset: (state: NotebookState, { payload }: PayloadAction<string>) => {\r\n      state.selectedDataset = payload;\r\n    },\r\n    toggleCheckpointModal: (state: NotebookState, { payload }: PayloadAction<boolean>) => {\r\n      state.showCheckpointModal = payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performRunCell.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performRunCell.fulfilled, (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performRunCell.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n\r\n    builder.addCase(performRunAllCells.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performRunAllCells.fulfilled, (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performRunAllCells.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n\r\n    builder.addCase(performFetchCheckpoints.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performFetchCheckpoints.fulfilled, (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performFetchCheckpoints.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n\r\n    builder.addCase(performSaveCheckpoint.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performSaveCheckpoint.fulfilled, (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performSaveCheckpoint.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n\r\n    builder.addCase(performLoadCheckpoint.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performLoadCheckpoint.fulfilled, (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(performLoadCheckpoint.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.error.message || null;\r\n    });\r\n  },\r\n});\r\n\r\nexport const { selectDataset, toggleCheckpointModal } = notebookSlice.actions;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { performRunAllCells, performRunCell } from './editor';\r\nimport { performLoadCheckpoint } from './checkpoint';\r\n\r\nexport type BrowserState = {\r\n  raw: string;\r\n  table: string;\r\n  console: string;\r\n}\r\n\r\nconst initialState: BrowserState = {\r\n  raw: '',\r\n  table: '',\r\n  console: '',\r\n};\r\n\r\nexport const browserSlice = createSlice({\r\n  name: 'browser',\r\n  initialState: initialState as BrowserState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(performRunCell.fulfilled, (state, action) => ({ ...state, ...action.payload }));\r\n\r\n    builder.addCase(performRunAllCells.fulfilled, (state, action) => ({ ...state, ...action.payload }));\r\n\r\n    builder.addCase(performLoadCheckpoint.fulfilled, (state, action) => action.payload.browserState);\r\n  },\r\n});\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { notebookSlice } from './slices/notebook';\r\nimport { editorSlice } from './slices/editor';\r\nimport { browserSlice } from './slices/browser';\r\nimport { checkpointSlice } from './slices/checkpoint';\r\n\r\nconst rootReducer = combineReducers({\r\n  notebook: notebookSlice.reducer,\r\n  browser: browserSlice.reducer,\r\n  editor: editorSlice.reducer,\r\n  checkpoint: checkpointSlice.reducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm, SubmitHandler, FieldValues } from 'react-hook-form';\r\n\r\nimport { AppState } from '../store';\r\nimport { selectDataset } from '../slices/notebook';\r\n\r\nconst demoDatasets = ['nobel_prizes_incorrect', 'movies_incorrect'];\r\n\r\nfunction DatasetSelection(): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n  const selectedDataset = useSelector<AppState, string | null>((state) => state.notebook.selectedDataset);\r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n  const onSubmit: SubmitHandler<FieldValues> = (data) => dispatch(selectDataset(data.dataset));\r\n\r\n  const radioField = (name: string) => (\r\n    <label htmlFor={name}>\r\n      <input\r\n        {...register('dataset', { required: true })}\r\n        id={name}\r\n        type=\"radio\"\r\n        value={name}\r\n      />\r\n      <span className={`ml-2 inline-block ${selectedDataset === name && 'font-bold'}`}>\r\n        {name}\r\n      </span>\r\n    </label>\r\n  );\r\n\r\n  return (\r\n    <form\r\n      className=\"flex flex-col items-center justify-center\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      {demoDatasets.map((name) => radioField(name))}\r\n      {errors.dataset && <span className=\"py-2 text-red-500\">Please choose a dataset</span>}\r\n      <button type=\"submit\" className=\"button-relief\">\r\n        Select\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default DatasetSelection;\r\n","import React, { useState, useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-json';\r\nimport 'ace-builds/src-noconflict/theme-monokai';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\n\r\nimport { AppState } from '../store';\r\n\r\nenum Mode {\r\n  Raw = 'RAW',\r\n  Table = 'TABLE',\r\n  Console = 'CONSOLE',\r\n}\r\n\r\nfunction DataBrowser(): React.ReactElement {\r\n  const loading = useSelector<AppState, boolean>((state) => state.notebook.loading);\r\n  const error = useSelector<AppState, string | null>((state) => state.notebook.error);\r\n  const selectedDataset = useSelector<AppState, string | null>((state) => state.notebook.selectedDataset);\r\n\r\n  const [browserMode, setBrowserMode] = useState(Mode.Raw);\r\n  const rawData = useSelector<AppState, string>((state) => (state.browser.raw));\r\n  const tableData = useSelector<AppState, string>((state) => (state.browser.table));\r\n  const consoleOutput = useSelector<AppState, string>((state) => (state.browser.console));\r\n\r\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    setBrowserMode(e.currentTarget.name as Mode);\r\n  };\r\n\r\n  const codeView = useMemo(() => (\r\n    <AceEditor\r\n      width=\"100%\"\r\n      mode=\"json\"\r\n      theme=\"monokai\"\r\n      readOnly\r\n      fontSize={16}\r\n      minLines={39}\r\n      maxLines={39}\r\n      showPrintMargin={false}\r\n      value={rawData}\r\n    />\r\n  ), [rawData]);\r\n\r\n  const tableView = useMemo(() => (\r\n    <div className=\"px-4 w-full h-80vh bg-gray-50 border border-gray-300 block rounded-md whitespace-nowrap overflow-scroll\">\r\n      <ReactMarkdown remarkPlugins={[gfm]}>\r\n        {tableData}\r\n      </ReactMarkdown>\r\n    </div>\r\n  ), [tableData]);\r\n\r\n  const consoleView = (\r\n    <div className=\"px-4 w-full h-80vh bg-gray-50 border border-gray-300 block rounded-md text-left overflow-scroll\">\r\n      {error && <span className=\"py-2 text-red-500\">{error}</span>}\r\n      {(!selectedDataset) && 'Error: No dataset selected. Please select a dataset first.'}\r\n      <span className=\"font-mono\">{consoleOutput}</span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"px-4 max-w-4xl min-h-screen\">\r\n      <div className=\"py-2\">\r\n        <h1 className=\"font-bold text-3xl uppercase p-4\">Data Browser</h1>\r\n      </div>\r\n      <div className=\"flex flex-row justify-between w-full bg-gray-50 border border-gray-300 rounded-t-md\">\r\n        <div className=\"text-left\">\r\n          <button type=\"button\" name={Mode.Raw} onClick={handleClick} className={`py-2 px-4 inline-block font-semibold ${(browserMode === Mode.Raw) ? 'text-blue-600' : 'text-gray-400'}`}>Raw</button>\r\n          <button type=\"button\" name={Mode.Table} onClick={handleClick} className={`py-2 px-4 inline-block font-semibold ${(browserMode === Mode.Table) ? 'text-blue-600' : 'text-gray-400'}`}>Table</button>\r\n          <button type=\"button\" name={Mode.Console} onClick={handleClick} className={`py-2 px-4 inline-block font-semibold ${(browserMode === Mode.Console) ? 'text-blue-600' : 'text-gray-400'}`}>Console</button>\r\n        </div>\r\n        {loading && (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-700 m-2 outline-none animate-spin transform rotate-180\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n          </svg>\r\n        )}\r\n      </div>\r\n      {browserMode === Mode.Raw && codeView}\r\n      {browserMode === Mode.Table && tableView}\r\n      {browserMode === Mode.Console && consoleView}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataBrowser;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-python';\r\nimport 'ace-builds/src-noconflict/theme-chrome';\r\n\r\nimport { AppState } from '../../store';\r\nimport { changeCell, focusCell } from '../../slices/editor';\r\n\r\ninterface IProps {\r\n  id: number;\r\n}\r\n\r\nfunction Cell({ id }: IProps): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n  const execStatus = useSelector<AppState, string | number>((state) => (\r\n    state.editor.cells.find((c) => c.id === id)?.execStatus || ' '\r\n  ));\r\n  const editorContent = useSelector<AppState, string>((state) => (\r\n    state.editor.cells.find((c) => c.id === id)?.editorContent || ''\r\n  ));\r\n  const numOfLines = useSelector<AppState, number>((state) => (\r\n    state.editor.cells.find((c) => c.id === id)?.numOfLines || 0\r\n  ));\r\n  const hasError = useSelector<AppState, boolean>((state) => (\r\n    state.editor.cells.find((c) => c.id === id)?.errorStatus || false\r\n  ));\r\n  const islastExecuted = useSelector<AppState, boolean>((state) => (\r\n    state.editor.lastExecutedCellId === id\r\n  ));\r\n  const hasUpdatedBrowser = useSelector<AppState, boolean>((state) => (\r\n    state.editor.updateBrowserCellId === id\r\n  ));\r\n\r\n  let leftBorder = '';\r\n  if (islastExecuted) leftBorder = 'border-l-4 border-green-500';\r\n  if (hasUpdatedBrowser) leftBorder = 'border-l-4 border-blue-500';\r\n  if (hasError) leftBorder = 'border-l-4 border-red-500';\r\n\r\n  return (\r\n    <div className={`flex flex-col p-2 ${leftBorder} rounded shadow-md relative hover:shadow-lg overflow-hidden`}>\r\n      <div className=\"flex flex-row justify-between items-start\">\r\n        <span className=\"text-lg mr-4 min-w-max\">{`[${execStatus}]: `}</span>\r\n        <div style={{ width: '93%' }} className={`mt-2 ring-4 ring-gray-400 ${numOfLines <= 5 ? 'focus-within:ring-blue-500' : 'focus-within:ring-yellow-500'} relative`}>\r\n          <AceEditor\r\n            width=\"100%\"\r\n            mode=\"python\"\r\n            theme=\"chrome\"\r\n            showGutter={false}\r\n            fontSize={16}\r\n            minLines={1}\r\n            maxLines={15}\r\n            value={editorContent}\r\n            onFocus={() => dispatch(focusCell(id))}\r\n            onChange={(value: string) => dispatch(changeCell(value))}\r\n            wrapEnabled\r\n          />\r\n        </div>\r\n      </div>\r\n      {numOfLines > 5 && <span className=\"mt-2 text-yellow-500 text-right font-bold\">Recommended maximum number of lines is 5</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cell;\r\n","import React from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport { AppState } from '../../store';\r\nimport {\r\n  addCell,\r\n  deleteCell,\r\n  performRunAllCells,\r\n  performRunCell,\r\n  moveCell,\r\n} from '../../slices/editor';\r\nimport { performFetchCheckpoints, performSaveCheckpoint } from '../../slices/checkpoint';\r\nimport { toggleCheckpointModal } from '../../slices/notebook';\r\nimport Cell from './Cell';\r\n\r\nfunction CellsList(): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n  const cellIds = useSelector<AppState, number[]>((state) => state.editor.cells.map((cell) => cell.id), shallowEqual);\r\n\r\n  const handleLoadCheckpoint = () => {\r\n    dispatch(toggleCheckpointModal(true));\r\n    dispatch(performFetchCheckpoints());\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div className=\"py-2\">\r\n        <h1 className=\"font-bold text-3xl uppercase p-4\">Editor</h1>\r\n      </div>\r\n      <div className=\"px-4 max-w-4xl max-h-screen bg-gray-50 border border-gray-300 block rounded-md text-left\">\r\n        <div className=\"flex flex-row justify-between\">\r\n          <div className=\"flex flex-row\">\r\n            <svg onClick={() => dispatch(addCell())} data-tip=\"Add New Cell\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n            </svg>\r\n            <svg onClick={() => dispatch(deleteCell())} data-tip=\"Delete Cell\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-red-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n            </svg>\r\n            <svg onClick={() => dispatch(moveCell(-1))} data-tip=\"Move Cell Up\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 11l5-5m0 0l5 5m-5-5v12\" />\r\n            </svg>\r\n            <svg onClick={() => dispatch(moveCell(+1))} data-tip=\"Move Cell Down\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 13l-5 5m0 0l-5-5m5 5V6\" />\r\n            </svg>\r\n            <svg onClick={() => dispatch(performRunCell())} data-tip=\"Run Cell\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n            </svg>\r\n            <svg onClick={() => dispatch(performRunAllCells())} data-tip=\"Run All Cells\" data-for=\"topButtons\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\r\n            </svg>\r\n          </div>\r\n          <div className=\"flex flex-row\">\r\n            <svg onClick={() => dispatch(performSaveCheckpoint())} xmlns=\"http://www.w3.org/2000/svg\" data-tip=\"Save Checkpoint\" data-for=\"topButtons\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\r\n            </svg>\r\n            <svg onClick={handleLoadCheckpoint} xmlns=\"http://www.w3.org/2000/svg\" data-tip=\"Load Checkpoint\" data-for=\"topButtons\" className=\"h-7 w-7 text-blue-500 hover:text-blue-700 hover:bg-gray-200 m-2 cursor-pointer outline-none\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\" />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"px-4 max-w-4xl h-80vh bg-gray-50 border border-gray-300 block rounded-md text-left overflow-y-scroll\">\r\n        <div className=\"flex flex-col m-2 gap-4\">\r\n          {cellIds.map((id) => <Cell key={id} id={id} />)}\r\n        </div>\r\n      </div>\r\n      <ReactTooltip id=\"topButtons\" place=\"top\" effect=\"solid\" />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CellsList;\r\n","import React, { SetStateAction } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppState } from '../../store';\r\nimport { CheckpointDetail } from '../../entities';\r\n\r\ninterface IProps {\r\n    id: string;\r\n    selectedId: string | null;\r\n    setSelectedId: React.Dispatch<SetStateAction<string | null>>;\r\n}\r\n\r\nfunction Checkpoint({ id, selectedId, setSelectedId }: IProps): React.ReactElement {\r\n  const checkpoint = useSelector<AppState, CheckpointDetail | undefined>((state) => (\r\n    state.checkpoint.find((c) => c.id === id)\r\n  ));\r\n\r\n  return (\r\n    <li onClick={() => setSelectedId(id)} className={`p-4 hover:bg-gray-100 cursor-pointer text-center ${selectedId === id && 'bg-gray-100'}`} role=\"presentation\">\r\n      {checkpoint?.timestamp}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Checkpoint;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { AppState } from '../../store';\r\nimport { performLoadCheckpoint } from '../../slices/checkpoint';\r\nimport { toggleCheckpointModal } from '../../slices/notebook';\r\nimport Checkpoint from './Checkpoint';\r\n\r\nfunction CheckpointsList(): React.ReactElement {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector<AppState, boolean>((state) => state.notebook.loading);\r\n  const ids = useSelector<AppState, string[]>((state) => (\r\n    state.checkpoint.map((checkpointDetail) => checkpointDetail.id)\r\n  ));\r\n  const [selectedId, setSelectedId] = useState<string | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleLoadCheckpoint = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedId) {\r\n      setError('Invalid selection!');\r\n      return;\r\n    }\r\n    dispatch(performLoadCheckpoint(selectedId));\r\n    dispatch(toggleCheckpointModal(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-400 h-screen w-screen flex justify-center items-center\">\r\n      <div className=\"mb-24 bg-white rounded shadow-lg w-2/12\">\r\n        <div className=\"border-b px-4 py-2 flex justify-between items-center\">\r\n          <h3 className=\"font-semibold text-lg uppercase\">Load checkpoint</h3>\r\n          <svg onClick={() => dispatch(toggleCheckpointModal(false))} xmlns=\"http://www.w3.org/2000/svg\" className=\"button-icon hover:text-red-700\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n          </svg>\r\n        </div>\r\n        <div className=\"flex flex-col justify-center\">\r\n          {ids.length > 0\r\n            ? (\r\n              <ul className=\"divide-y divide-gray-300\">\r\n                {ids.map((id) => <Checkpoint key={id} id={id} selectedId={selectedId} setSelectedId={setSelectedId} />)}\r\n              </ul>\r\n            )\r\n            : <span className=\"m-4\">{loading ? 'Loading...' : 'No checkpoint has been created'}</span>}\r\n        </div>\r\n        <div className=\"flex justify-end items-center w-100 border-t px-2\">\r\n          {error && <span className=\"px-4 py-2 text-red-500\">{error}</span>}\r\n          <button onClick={handleLoadCheckpoint} type=\"submit\" className=\"button bg-blue-600 hover:bg-blue-700\">Load</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckpointsList;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppState } from '../store';\r\nimport DatasetSelection from '../components/DatasetSelection';\r\nimport DataBrowser from '../components/DataBrowser';\r\nimport CellsList from '../components/editor/CellsList';\r\nimport CheckpointsList from '../components/checkpoint/CheckpointsList';\r\n\r\nfunction HomeView(): React.ReactElement {\r\n  const showCheckpointModal = useSelector<AppState, boolean>((state) => state.notebook.showCheckpointModal);\r\n\r\n  return (\r\n    <div className=\"h-full w-screen flex flex-col justify-center\">\r\n      <nav className=\"flex flex-row items-center px-8 py-1 bg-blue-600 border-b-8 border-blue-200\">\r\n        <div className=\"flex flex-row items-center text-white\">\r\n          <a href=\"index\" className=\"no-underline py-2 hover:text-gray-300\"><h1 className=\"font-bold text-3xl\">Data Jupyter</h1></a>\r\n        </div>\r\n      </nav>\r\n      {showCheckpointModal ? <CheckpointsList /> : (\r\n        <div className=\"bg-gray-100\">\r\n          <main className=\"h-full container mx-auto px-4 py-4 text-center\">\r\n            <div className=\"pt-16\">\r\n              <h1 className=\"font-bold text-3xl uppercase p-4\">Choose a demo dataset</h1>\r\n              <DatasetSelection />\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-6 py-4\">\r\n              <CellsList />\r\n              <DataBrowser />\r\n            </div>\r\n          </main>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeView;\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store';\nimport HomeView from './views/HomeView';\n\nfunction App(): React.ReactElement {\n  return (\n    <Provider store={store}>\n      <HomeView />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}